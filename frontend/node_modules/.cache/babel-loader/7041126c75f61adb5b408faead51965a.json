{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar use_force_update_1 = require(\"use-force-update\");\n\nvar context_1 = require(\"./context\");\n\nvar default_global_state_manager_1 = require(\"./default-global-state-manager\");\n\nvar set_global_1 = require(\"./set-global\");\n\nvar react_hooks_error_1 = require(\"./utils/react-hooks-error\");\n\nfunction _useGlobal(overrideGlobalStateManager, property) {\n  if (!react_1.useContext) {\n    throw react_hooks_error_1.default;\n  }\n\n  var globalStateManager = overrideGlobalStateManager || react_1.useContext(context_1.default) || default_global_state_manager_1.default;\n  var forceUpdate = use_force_update_1.default();\n\n  var removeForceUpdateListener = function () {\n    globalStateManager.removePropertyListener(forceUpdate);\n  };\n\n  if (typeof property === 'undefined') {\n    react_1.useEffect(function () {\n      return removeForceUpdateListener;\n    }, []);\n    var globalStateSetter = react_1.useCallback(function (newGlobalState, callback) {\n      if (callback === void 0) {\n        callback = null;\n      }\n\n      return set_global_1.default(globalStateManager, newGlobalState, callback);\n    }, []);\n    return [globalStateManager.spyState(forceUpdate), globalStateSetter];\n  }\n\n  react_1.useEffect(function () {\n    globalStateManager.addPropertyListener(property, forceUpdate);\n    return removeForceUpdateListener;\n  });\n  var globalPropertySetter = react_1.useCallback(function (value, callback) {\n    if (callback === void 0) {\n      callback = null;\n    }\n\n    var newGlobalState = Object.create(null);\n    newGlobalState[property] = value;\n    return set_global_1.default(globalStateManager, newGlobalState, callback);\n  }, []);\n  return [globalStateManager.state[property], globalPropertySetter];\n}\n\nexports.default = _useGlobal;","map":null,"metadata":{},"sourceType":"script"}