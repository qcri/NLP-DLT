{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _defineProperty from \"/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _slicedToArray from \"/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nvar _jsxFileName = \"/app/src/pages/List/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport { useGlobal } from \"reactn\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport Search from \"../../components/table/search\";\nimport SearchDates from \"../../components/table/searchDates\"; //---------------------------------------------------------------------------------------------\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; //---------------------------------------------------------------------------------------------\n\n_notification.config({\n  placement: \"topRight\",\n  bottom: 50,\n  duration: 1.5\n});\n\nconst RenderList = () => {\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n  const initialFormState = {\n    mno1: \"\",\n    country_mno1: \"\",\n    mno2: \"\",\n    country_mno2: \"\",\n    ra_name: \"\",\n    ra_status: \"\",\n    timestamp: \"\",\n    articles: [{\n      articleId: \"\",\n      articleName: \"\",\n      articleStatus: \"\",\n      variables: [],\n      variations: [],\n      stdclauses: [],\n      customtexts: []\n    }]\n  };\n  const copyState = {\n    value: '',\n    copied: false\n  };\n\n  const _useState = useState([initialFormState]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const _useState3 = useState([copyState]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        copy = _useState4[0],\n        setCopy = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedRow = _useState6[0],\n        setSelectedRow = _useState6[1];\n\n  const _useGlobal = useGlobal(),\n        _useGlobal2 = _slicedToArray(_useGlobal, 2),\n        setGlobal = _useGlobal2[1];\n\n  const onCopy = value => {\n    copy.value = value;\n    setCopy({\n      copied: true\n    });\n    setGlobal({\n      value: value\n    });\n    setGlobal({\n      copied: true\n    });\n  };\n\n  const openNotificationWithIcon = (type, title, description) => {\n    _notification[type]({\n      message: title,\n      description: description\n    });\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const clicRow = e => {\n    setSelectedRow(e);\n  };\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isModalVisible = _useState8[0],\n        setIsModalVisible = _useState8[1];\n\n  const showModal = v => {\n    console.log(v);\n    setIsModalVisible(true);\n    return React.createElement(_Modal, {\n      title: \"Article in detail\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      okText: \"Accept\",\n      cancelText: \"Submit Change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"Variables\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      size: \"large\",\n      name: \"key\",\n      style: {\n        width: '50%'\n      },\n      defaultValue: record.articles.map(data => {\n        if (data.articleId === selectedRow) {\n          console.log(data.articleId);\n          console.log(selectedRow);\n          return data.variables.map(v => v.key);\n        }\n      }),\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(_Input, {\n      name: \"value\",\n      size: \"large\",\n      placeholder: \"Value\",\n      style: {\n        width: '50%'\n      },\n      defaultValue: data.value //onChange={e => handleVariablesChange(index, e, item.verify)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"Standard Clauses\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(_Form.Item, {\n      label: \"Variations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(_Form.Item, {\n      label: \"Custom Texts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  };\n\n  useEffect(() => {\n    axios.get(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/list\"), {\n      params: {\n        ID: userDetails\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setList(res.data);\n\n      if (res.ok) {\n        return res.json();\n      }\n\n      throw res;\n    }).then(resJson => {\n      setList(resJson);\n    }).catch(error => {});\n  }); // Execut some element of the array changue\n\n  const handleSubmit = (e, mno1) => {\n    e.preventDefault();\n    const jwtToken = localStorage.getItem(\"token\"); //Set POST request\n\n    axios.post(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/acceptAgreementInitiation\"), {\n      mno1,\n      userDetails\n    }, {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(jwtToken)\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        openNotificationWithIcon(\"success\", \"SUCCESSFULLY REGISTERED AGREEMENT\");\n      }\n\n      if (res.status === 201) {\n        openNotificationWithIcon(\"error\", \"MISSING VALUES TO CREATE THE AGREEMENT\");\n      }\n\n      if (res.status === 202) {\n        openNotificationWithIcon(\"error\", \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\");\n      }\n    }).catch(() => openNotificationWithIcon(\"error\", \"UNREGISTERED ROAMING AGREEMENT\"));\n  };\n\n  const columns = [_objectSpread({\n    title: \"MNO1 Name\",\n    dataIndex: \"mno1\",\n    key: \"mno1\"\n  }, Search(\"mno1\", \"MNO Name\"), {\n    align: 'center',\n    render: mno1 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, mno1), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: mno1,\n      onCopy: onCopy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"Copy the name of MNO1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"copy\",\n      style: {\n        color: 'black',\n        fontSize: 'large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })))))\n  }), _objectSpread({\n    title: \"MNO Country\",\n    dataIndex: \"country_mno1\",\n    key: \"country_mno1\"\n  }, Search(\"country_mno1\", \"por precio del Token\"), {\n    align: 'center',\n    render: country_mno1 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(ReactCountryFlag, {\n      countryCode: country_mno1,\n      svg: true,\n      style: {\n        width: '2em',\n        height: '2em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })))\n  }), _objectSpread({\n    title: \"MNO2 Name\",\n    dataIndex: \"mno2\",\n    key: \"mno2\"\n  }, Search(\"mno2\", \"MNO Name\"), {\n    align: 'center',\n    render: mno2 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, mno2), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: mno2,\n      onCopy: onCopy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"Copy the name of MNO2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"copy\",\n      style: {\n        color: 'black',\n        fontSize: 'large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })))))\n  }), _objectSpread({\n    title: \"MNO Country\",\n    dataIndex: \"country_mno2\",\n    key: \"country_mno2\"\n  }, Search(\"country_mno2\", \"por precio del Token\"), {\n    align: 'center',\n    render: country_mno2 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(ReactCountryFlag, {\n      countryCode: country_mno2,\n      svg: true,\n      style: {\n        width: '2em',\n        height: '2em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })))\n  }), _objectSpread({\n    title: \"RA name\",\n    dataIndex: \"ra_name\",\n    key: \"ra_name\"\n  }, Search(\"ra_name\", \"por precio del Token\"), {\n    align: 'center',\n    render: ra_name => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, ra_name), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: ra_name,\n      onCopy: onCopy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"Copy name of Roaming Agreement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"copy\",\n      style: {\n        color: 'black',\n        fontSize: 'large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })))))\n  }), {\n    title: \"RA Status\",\n    dataIndex: \"ra_status\",\n    key: \"ra_status\",\n    align: 'center',\n    filters: [{\n      text: \"Comprable\",\n      value: \"comprable\"\n    }, {\n      text: \"No vendible\",\n      value: \"no vendible\"\n    }],\n    filterMultiple: false,\n    onFilter: (value, record) => record.ra_status.toLowerCase().includes(value),\n\n    render(ra_status, record) {\n      return {\n        children: React.createElement(_Tag, {\n          color: ra_status === \"INIT\" ? 'green' : 'volcano',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, ra_status)\n      };\n    },\n\n    align: 'center'\n  }, _objectSpread({\n    title: \"Date of status change\",\n    dataIndex: \"timestamp\",\n    key: \"timestamp\",\n    sorter: (a, b) => moment(a.timestamp).unix() - moment(b.timestamp).unix(),\n    defaultSortOrder: \"descend\"\n  }, SearchDates(\"timestamp\"), {\n    render: date => moment(date * 1000).format(\"DD/MM/YYYY\"),\n    align: 'center'\n  }), {\n    title: \"Accept RA\",\n    align: 'center',\n    render: () => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: e => handleSubmit(e, list.mno1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: list.map((rank, i, arr) => {\n        if (arr.length - 1 === i) {\n          return rank.ra_status.toString();\n        }\n      }) == 'started_ra' ? 'unlock' : 'lock',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })))\n  }];\n  return React.createElement(\"section\", {\n    className: \"CommentsWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, \"MOBILE NETWORK OPERATORS IN ROAMING AGREEMENTS\"), React.createElement(_Table, {\n    columns: columns,\n    dataSource: list,\n    expandedRowRender: record => {\n      const columns = [{\n        title: 'Article Number',\n        dataIndex: 'articleId',\n        key: 'articleId',\n        align: 'center',\n        render: articleId => React.createElement(_Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, React.createElement(_Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, articleId))\n      }, {\n        title: 'Article Name',\n        dataIndex: 'articleName',\n        key: 'articleName',\n        align: 'center',\n        render: articleName => React.createElement(_Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(_Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, articleName))\n      }, {\n        title: 'Article Status',\n        dataIndex: 'articleStatus',\n        key: 'articleStatus',\n        align: 'center',\n\n        render(articleStatus) {\n          return {\n            children: React.createElement(_Tag, {\n              color: articleStatus === \"INIT\" ? 'green' : 'volcano',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 315\n              },\n              __self: this\n            }, articleStatus)\n          };\n        }\n\n      }, {\n        title: 'Article in details',\n        align: 'center',\n\n        render(articles) {\n          return {\n            children: React.createElement(React.Fragment, null, React.createElement(_Button, {\n              type: \"primary\",\n              onClick: showModal(selectedRow),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 323\n              },\n              __self: this\n            }, \"View\"))\n          };\n        }\n\n      }];\n      return React.createElement(_Table, {\n        bordered: true,\n        columns: columns,\n        dataSource: record.articles,\n        pagination: false,\n        onRowClick: clicRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }));\n};\n\nexport default RenderList;","map":{"version":3,"sources":["/app/src/pages/List/index.js"],"names":["React","useState","useEffect","ReactCountryFlag","useGlobal","moment","axios","Search","SearchDates","CopyToClipboard","config","placement","bottom","duration","RenderList","userDetails","JSON","parse","localStorage","getItem","initialFormState","mno1","country_mno1","mno2","country_mno2","ra_name","ra_status","timestamp","articles","articleId","articleName","articleStatus","variables","variations","stdclauses","customtexts","copyState","value","copied","list","setList","copy","setCopy","selectedRow","setSelectedRow","setGlobal","onCopy","openNotificationWithIcon","type","title","description","message","handleOk","setIsModalVisible","handleCancel","clicRow","e","isModalVisible","showModal","v","console","log","width","record","map","data","key","get","process","env","REACT_APP_GATEWAY_HOST","REACT_APP_GATEWAY_PORT","params","ID","headers","then","res","ok","json","resJson","catch","error","handleSubmit","preventDefault","jwtToken","post","status","columns","dataIndex","align","render","color","fontSize","height","filters","text","filterMultiple","onFilter","toLowerCase","includes","children","sorter","a","b","unix","defaultSortOrder","date","format","rank","i","arr","length","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactCountryFlag from \"react-country-flag\"\nimport { useGlobal } from \"reactn\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { Input, Button, Col, Form, Icon, notification, Modal, Row, Table, Tag, Tooltip } from \"antd\";\nimport Search from \"../../components/table/search\";\nimport SearchDates from \"../../components/table/searchDates\";\n//---------------------------------------------------------------------------------------------\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n//---------------------------------------------------------------------------------------------\n\nnotification.config({\n  placement: \"topRight\",\n  bottom: 50,\n  duration: 1.5,\n});\n\nconst RenderList = () => {\n\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n\n  const initialFormState = {\n    mno1: \"\",\n    country_mno1: \"\",\n    mno2: \"\",\n    country_mno2: \"\",\n    ra_name: \"\",\n    ra_status: \"\",\n    timestamp: \"\",\n    articles: [{\n      articleId: \"\",\n      articleName: \"\",\n      articleStatus: \"\",\n      variables: [],\n      variations: [],\n      stdclauses: [],\n      customtexts: []\n    }]\n  };\n  const copyState = {\n    value: '',\n    copied: false,\n  };\n\n  const [list, setList] = useState([initialFormState]);\n  const [copy, setCopy] = useState([copyState]);\n  const [selectedRow, setSelectedRow] = useState({});\n  const [, setGlobal] = useGlobal();\n\n  const onCopy = (value) => {\n    copy.value = value;\n    setCopy({ copied: true })\n    setGlobal({ value: value })\n    setGlobal({ copied: true })\n  }\n\n  const openNotificationWithIcon = (type, title, description) => {\n    notification[type]({\n      message: title,\n      description: description,\n    });\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const clicRow = (e) => {\n    setSelectedRow(e)\n  }\n\n  const [isModalVisible, setIsModalVisible] = useState(true);\n  const showModal = (v) => {\n    console.log(v);\n    setIsModalVisible(true);\n    return <Modal title=\"Article in detail\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} okText=\"Accept\" cancelText=\"Submit Change\">\n      <Form.Item label=\"Variables\">\n        < Row >\n          <Input\n            size=\"large\"\n            name=\"key\"\n            style={{ width: '50%' }}\n            defaultValue={record.articles.map(data => {\n              if (data.articleId === selectedRow) {\n                console.log(data.articleId);\n                console.log(selectedRow);\n                return data.variables.map(v => v.key)\n              }\n            })}\n            disabled\n          />\n          <Input\n            name=\"value\"\n            size=\"large\"\n            placeholder={\"Value\"}\n            style={{ width: '50%' }}\n            defaultValue={data.value}\n          //onChange={e => handleVariablesChange(index, e, item.verify)}\n          />\n        </Row>\n      </Form.Item>\n      <Form.Item label=\"Standard Clauses\">\n      </Form.Item>\n      <Form.Item label=\"Variations\">\n      </Form.Item>\n      <Form.Item label=\"Custom Texts\">\n      </Form.Item>\n    </Modal>;\n  };\n\n  useEffect(() => {\n    axios\n      .get(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/list`, {\n        params: { ID: userDetails },\n        headers: { 'Content-Type': 'application/json' }\n      })\n      .then(res => {\n        setList(res.data);\n        if (res.ok) {\n          return res.json();\n        }\n        throw res;\n      })\n      .then(resJson => {\n        setList(resJson);\n      })\n      .catch(error => { });\n  }); // Execut some element of the array changue\n\n  const handleSubmit = (e, mno1) => {\n    e.preventDefault();\n    const jwtToken = localStorage.getItem(\"token\");\n    //Set POST request\n    axios\n      .post(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/acceptAgreementInitiation`, { mno1, userDetails }, { headers: { \"Authorization\": `Bearer ${jwtToken}` } })\n      .then((res) => {\n        if (res.status === 200) {\n          openNotificationWithIcon(\n            \"success\",\n            \"SUCCESSFULLY REGISTERED AGREEMENT\"\n          );\n        }\n        if (res.status === 201) {\n          openNotificationWithIcon(\n            \"error\",\n            \"MISSING VALUES TO CREATE THE AGREEMENT\"\n          );\n        }\n        if (res.status === 202) {\n          openNotificationWithIcon(\n            \"error\",\n            \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\"\n          );\n        }\n      })\n      .catch(() =>\n        openNotificationWithIcon(\n          \"error\",\n          \"UNREGISTERED ROAMING AGREEMENT\",\n        )\n      )\n  };\n\n  const columns = [\n    {\n      title: \"MNO1 Name\", dataIndex: \"mno1\", key: \"mno1\", ...Search(\"mno1\", \"MNO Name\"), align: 'center',\n      render: (mno1) => (\n        <Row>\n          <Col span={20}>\n            {mno1}\n          </Col>\n          <Col span={4}>\n            <CopyToClipboard\n              text={mno1}\n              onCopy={onCopy}\n            >\n              <Tooltip title=\"Copy the name of MNO1\">\n                <Icon type=\"copy\" style={{ color: 'black', fontSize: 'large' }} />\n              </Tooltip>\n            </CopyToClipboard>\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"MNO Country\", dataIndex: \"country_mno1\", key: \"country_mno1\", ...Search(\"country_mno1\", \"por precio del Token\"), align: 'center',\n      render: (country_mno1) => (\n        <Row>\n          <Col span={20}>\n            <ReactCountryFlag countryCode={country_mno1} svg style={{\n              width: '2em',\n              height: '2em',\n            }} />\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"MNO2 Name\", dataIndex: \"mno2\", key: \"mno2\", ...Search(\"mno2\", \"MNO Name\"), align: 'center',\n      render: (mno2) => (\n        <Row>\n          <Col span={20}>\n            {mno2}\n          </Col>\n          <Col span={4}>\n            <CopyToClipboard\n              text={mno2}\n              onCopy={onCopy}\n            >\n              <Tooltip title=\"Copy the name of MNO2\">\n                <Icon type=\"copy\" style={{ color: 'black', fontSize: 'large' }} />\n              </Tooltip>\n            </CopyToClipboard>\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"MNO Country\", dataIndex: \"country_mno2\", key: \"country_mno2\", ...Search(\"country_mno2\", \"por precio del Token\"), align: 'center',\n      render: (country_mno2) => (\n        <Row>\n          <Col span={20}>\n            <ReactCountryFlag countryCode={country_mno2} svg style={{\n              width: '2em',\n              height: '2em',\n            }} />\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"RA name\", dataIndex: \"ra_name\", key: \"ra_name\", ...Search(\"ra_name\", \"por precio del Token\"), align: 'center',\n      render: (ra_name) => (\n        <Row>\n          <Col span={20}>\n            {ra_name}\n          </Col>\n          <Col span={4}>\n            <CopyToClipboard\n              text={ra_name}\n              onCopy={onCopy}\n            >\n              <Tooltip title=\"Copy name of Roaming Agreement\">\n                <Icon type=\"copy\" style={{ color: 'black', fontSize: 'large' }} />\n              </Tooltip>\n            </CopyToClipboard>\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"RA Status\", dataIndex: \"ra_status\", key: \"ra_status\", align: 'center',\n      filters: [\n        { text: \"Comprable\", value: \"comprable\" },\n        { text: \"No vendible\", value: \"no vendible\" },\n      ],\n      filterMultiple: false,\n      onFilter: (value, record) => record.ra_status.toLowerCase().includes(value),\n      render(ra_status, record) {\n        return {\n          children: <Tag color={(ra_status) === \"INIT\" ? 'green' : 'volcano'}>{ra_status}</Tag>\n        };\n      }, align: 'center'\n    },\n    { title: \"Date of status change\", dataIndex: \"timestamp\", key: \"timestamp\", sorter: (a, b) => moment(a.timestamp).unix() - moment(b.timestamp).unix(), defaultSortOrder: \"descend\", ...SearchDates(\"timestamp\"), render: date => moment(date * 1000).format(\"DD/MM/YYYY\"), align: 'center' },\n    {\n      title: \"Accept RA\", align: 'center', render: () => (\n        <span>\n          <a\n            onClick={e => handleSubmit(e, list.mno1)}\n          >\n            <Icon type={list.map((rank, i, arr) => {\n              if (arr.length - 1 === i) {\n                return (rank.ra_status).toString()\n              }\n            }) == 'started_ra' ? 'unlock' : 'lock'} />\n          </a>\n        </span>\n      )\n    },\n  ];\n\n  return (\n    <section className=\"CommentsWrapper\">\n      <h2>MOBILE NETWORK OPERATORS IN ROAMING AGREEMENTS</h2>\n      <Table columns={columns} dataSource={list} expandedRowRender={(record) => {\n        const columns = [\n          {\n            title: 'Article Number', dataIndex: 'articleId', key: 'articleId', align: 'center',\n            render: (articleId) => (\n              <Row>\n                <Col>\n                  {articleId}\n                </Col>\n              </Row>\n            )\n          },\n          {\n            title: 'Article Name', dataIndex: 'articleName', key: 'articleName', align: 'center', render: (articleName) => (\n              <Row>\n                <Col>\n                  {articleName}\n                </Col>\n              </Row>\n            )\n          },\n          {\n            title: 'Article Status', dataIndex: 'articleStatus', key: 'articleStatus', align: 'center', render(articleStatus) {\n              return {\n                children: <Tag color={(articleStatus) === \"INIT\" ? 'green' : 'volcano'}>{articleStatus}</Tag>\n              };\n            }\n          },\n          {\n            title: 'Article in details', align: 'center', render(articles) {\n              return {\n                children: <>\n                  <Button type=\"primary\" onClick={showModal(selectedRow)}>\n                    View\n                  </Button>\n                </>\n              };\n            }\n          },\n        ];\n        return (\n          <Table\n            bordered\n            columns={columns}\n            dataSource={record.articles}\n            pagination={false}\n            onRowClick={clicRow}\n          />\n        );\n      }} />\n    </section >\n  );\n};\n\nexport default RenderList;\n"]},"metadata":{},"sourceType":"module"}