{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/auto-complete/style\";\nimport _AutoComplete from \"antd/es/auto-complete\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _defineProperty from \"/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _slicedToArray from \"/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/app/src/pages/AddArticle/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport \"./../../App.css\";\nimport axios from \"axios\";\nimport Clipboard from 'react-clipboard.js';\nimport { useGlobal } from \"reactn\";\nimport * as outputNLP from \"./../../data/outputNLP.json\";\nconst initialFormState = {\n  raname: \"\",\n  articleNo: \"\",\n  articleName: \"\"\n};\n\nconst AddArticle = () => {\n  const formItemLayout = {};\n\n  const _useGlobal = useGlobal(),\n        _useGlobal2 = _slicedToArray(_useGlobal, 1),\n        global = _useGlobal2[0];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n\n  const _useState3 = useState(initialFormState),\n        _useState4 = _slicedToArray(_useState3, 2),\n        addArticle = _useState4[0],\n        setAddArticle = _useState4[1];\n\n  const _useState5 = useState([{\n    id: \"\",\n    key: \"\",\n    value: \"\"\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        formVariables = _useState6[0],\n        setFormVariables = _useState6[1];\n\n  const _useState7 = useState([{\n    value: \"\"\n  }]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        formVariations = _useState8[0],\n        setFormVariations = _useState8[1];\n\n  const _useState9 = useState([{\n    value: \"\"\n  }]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        formStdClauses = _useState10[0],\n        setFormStdClauses = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        input = _useState12[0],\n        setInput = _useState12[1];\n\n  const openNotificationWithIcon = (type, title, description) => {\n    _notification[type]({\n      message: title,\n      description: description\n    });\n  };\n\n  const onClick = () => {\n    const value = global.value;\n    addArticle.raname = value;\n    setAddArticle(prevValue => _objectSpread({}, prevValue, {\n      raname: value\n    }));\n  };\n\n  function handleChange(event) {\n    const value = event.target.value;\n    console.log(value);\n    setAddArticle(_objectSpread({}, addArticle, {\n      [event.target.name]: value\n    }));\n  }\n\n  const handleVariablesChange = (i, e) => {\n    let newFormVariables = [...formVariables];\n    newFormVariables[i][e.target.name] = e.target.value;\n    setFormVariables(newFormVariables);\n  };\n\n  const handleVariationsChange = (i, e) => {\n    let newFormVariations = [...formVariations];\n    newFormVariations[i][e.target.name] = e.target.value;\n    setFormVariations(newFormVariations);\n  };\n\n  const handleStdClausesChange = (i, e) => {\n    let newFormStdClauses = [...formStdClauses];\n    newFormStdClauses[i][e.target.name] = e.target.value;\n    setFormStdClauses(newFormStdClauses);\n  };\n\n  const onChange = value => {\n    setAddArticle(_objectSpread({}, addArticle, {\n      articleNo: value\n    }));\n    addArticle.articleNo = value;\n    outputNLP.NLP.map(item => {\n      item.articles.map(data => {\n        if (data.id == value) {\n          setAddArticle(_objectSpread({}, addArticle, {\n            articleName: data.article\n          }));\n          addArticle.articleName = data.article;\n        }\n      });\n    });\n  };\n\n  let addVariablesFields = () => {\n    setFormVariables([...formVariables, {\n      id: \"\",\n      key: \"\",\n      value: \"\"\n    }]);\n  };\n\n  let removeVariablesFields = i => {\n    let newFormVariables = [...formVariables];\n    newFormVariables.splice(i, 1);\n    setFormVariables(newFormVariables);\n  };\n\n  let addVariationsFields = () => {\n    setFormVariations([...formVariations, {\n      value: \"\"\n    }]);\n  };\n\n  let removeVariationsFields = i => {\n    let newFormVariations = [...formVariations];\n    newFormVariations.splice(i, 1);\n    setFormVariations(newFormVariations);\n  };\n\n  let addStdClausesFields = () => {\n    setFormStdClauses([...formStdClauses, {\n      value: \"\"\n    }]);\n  };\n\n  let removeStdClausesFields = i => {\n    let newFormStdClauses = [...formStdClauses];\n    newFormStdClauses.splice(i, 1);\n    setFormStdClauses(newFormStdClauses);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    const jwtToken = localStorage.getItem(\"token\");\n    axios.post(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/proposeAddArticle\"), {\n      addArticle,\n      formVariables,\n      formVariations,\n      formStdClauses,\n      userDetails\n    }, {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(jwtToken)\n      }\n    }).then(res => {\n      console.log(addArticle);\n\n      if (res.status === 200) {\n        openNotificationWithIcon(\"success\", \"SUCCESSFULLY REGISTERED AGREEMENT\");\n      }\n\n      if (res.status === 201) {\n        openNotificationWithIcon(\"error\", \"MISSING VALUES TO CREATE THE AGREEMENT\");\n      }\n\n      if (res.status === 202) {\n        openNotificationWithIcon(\"error\", \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\");\n      }\n    }).catch(() => openNotificationWithIcon(\"error\", \"UNREGISTERED ROAMING AGREEMENT\")).finally(() => setLoading(false));\n  };\n\n  return React.createElement(\"section\", {\n    className: \"CommentsWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \" PROPOSE ARTICLES FOR ROAMING AGREEMENT\"), React.createElement(_Row, {\n    gutter: [16, 16],\n    type: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    xl: 24,\n    lg: 24,\n    md: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n    name: \"basic\",\n    initialvalues: {\n      remember: true\n    },\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(_Spin, {\n    spinning: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    lg: 1,\n    md: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(_Col, {\n    lg: 23,\n    md: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(_Form.Item, {\n    label: \"NAME OF THE ROAMING AGREEMENT\",\n    name: \"raname\",\n    rules: [{\n      required: true,\n      message: \"NAME OF THE ROAMING AGREEMENT\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Name of the Roaming Agreement\",\n    suffix: React.createElement(Clipboard, {\n      onClick: onClick,\n      style: {\n        background: 'white',\n        border: '0px',\n        outline: '0px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"Paste raname Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"snippets\",\n      style: {\n        color: 'black',\n        fontSize: 'x-large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))),\n    type: \"text\",\n    name: \"raname\",\n    value: addArticle.raname,\n    onChange: handleChange,\n    style: {\n      width: '40.5%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })), React.createElement(_Form.Item, {\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, outputNLP.NLP.map((item, index) => React.createElement(_Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(_Form.Item, {\n    label: \"SELECT ARTICLE ID AND NAME\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    span: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(_AutoComplete, {\n    size: \"large\",\n    dataSource: item.articles.map(data => data.id),\n    placeholder: \"ID\",\n    onSelect: data => data,\n    onChange: onChange,\n    style: {\n      width: '75%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    size: \"large\",\n    style: {\n      width: '55%'\n    },\n    placeholder: \"Name of the Article\",\n    defaultValue: addArticle.articleName,\n    value: addArticle.articleName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  })), React.createElement(_Form.Item, {\n    label: \"SELECT VARIABLES\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, formVariables.map((element, index) => React.createElement(_Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    span: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    name: \"id\",\n    size: \"large\",\n    placeholder: \"ID\",\n    style: {\n      width: '82%'\n    },\n    type: \"number\",\n    value: element.id,\n    onChange: e => handleVariablesChange(index, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    name: \"key\",\n    size: \"large\",\n    placeholder: \"Key\",\n    style: {\n      width: '85%'\n    },\n    type: \"text\",\n    value: element.key || \"\",\n    onChange: e => handleVariablesChange(index, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    name: \"value\",\n    size: \"large\",\n    placeholder: \"Value\",\n    style: {\n      width: '94%'\n    },\n    type: \"text\",\n    value: element.value || \"\",\n    onChange: e => handleVariablesChange(index, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, index ? React.createElement(_Button, {\n    size: \"large\",\n    icon: \"minus\",\n    onClick: () => removeVariablesFields(index),\n    style: {\n      background: \"gray\",\n      width: '80%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }) : null), React.createElement(_Col, {\n    span: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(_Button, {\n    size: \"large\",\n    type: \"primary\",\n    icon: \"plus\",\n    style: {\n      width: '80%'\n    },\n    onClick: addVariablesFields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  })))), React.createElement(_Form.Item, {\n    label: \"SELECT VARIATIONS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, formVariations.map((element, index) => React.createElement(_Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    span: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    name: \"value\",\n    size: \"large\",\n    placeholder: \"Variation\",\n    style: {\n      width: '99%'\n    },\n    type: \"number\",\n    value: element.value,\n    onChange: e => handleVariationsChange(index, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, index ? React.createElement(_Button, {\n    size: \"large\",\n    icon: \"minus\",\n    onClick: () => removeVariationsFields(index),\n    style: {\n      background: \"gray\",\n      width: '80%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }) : null), React.createElement(_Col, {\n    span: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, React.createElement(_Button, {\n    size: \"large\",\n    type: \"primary\",\n    icon: \"plus\",\n    style: {\n      width: '80%'\n    },\n    onClick: addVariationsFields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  })))), React.createElement(_Form.Item, {\n    label: \"SELECT STANDARD CLAUSES\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, formStdClauses.map((element, index) => React.createElement(_Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    span: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    name: \"value\",\n    size: \"large\",\n    placeholder: \"Standard Clause\",\n    style: {\n      width: '99%'\n    },\n    type: \"number\",\n    value: element.value,\n    onChange: e => handleStdClausesChange(index, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, index ? React.createElement(_Button, {\n    size: \"large\",\n    icon: \"minus\",\n    onClick: () => removeStdClausesFields(index),\n    style: {\n      background: \"gray\",\n      width: '80%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }) : null), React.createElement(_Col, {\n    span: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, React.createElement(_Button, {\n    size: \"large\",\n    type: \"primary\",\n    icon: \"plus\",\n    style: {\n      width: '80%'\n    },\n    onClick: addStdClausesFields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  })))), React.createElement(_Form.Item, {\n    label: \"ENABLE CUSTOM TEXTS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }, React.createElement(_Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, \"onChange=\", () => {\n    setInput(!input);\n  }), React.createElement(_Input, {\n    disabled: input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }))))), React.createElement(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }), React.createElement(_Button, {\n    size: \"large\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    style: {\n      width: '40.5%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, \"PROPOSE ARTICLE\"))))))));\n};\n\nexport default AddArticle;","map":{"version":3,"sources":["/app/src/pages/AddArticle/index.js"],"names":["React","useState","axios","Clipboard","useGlobal","outputNLP","initialFormState","raname","articleNo","articleName","AddArticle","formItemLayout","global","loading","setLoading","userDetails","JSON","parse","localStorage","getItem","addArticle","setAddArticle","id","key","value","formVariables","setFormVariables","formVariations","setFormVariations","formStdClauses","setFormStdClauses","input","setInput","openNotificationWithIcon","type","title","description","message","onClick","prevValue","handleChange","event","target","console","log","name","handleVariablesChange","i","e","newFormVariables","handleVariationsChange","newFormVariations","handleStdClausesChange","newFormStdClauses","onChange","NLP","map","item","articles","data","article","addVariablesFields","removeVariablesFields","splice","addVariationsFields","removeVariationsFields","addStdClausesFields","removeStdClausesFields","handleSubmit","preventDefault","jwtToken","post","process","env","REACT_APP_GATEWAY_HOST","REACT_APP_GATEWAY_PORT","headers","then","res","status","catch","finally","remember","required","background","border","outline","color","fontSize","width","index","element"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  AutoComplete,\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Spin,\n  notification,\n  Tooltip,\n  Switch\n} from \"antd\";\nimport \"./../../App.css\";\nimport axios from \"axios\";\nimport { Icon as NewIco } from \"antd\";\nimport Clipboard from 'react-clipboard.js';\nimport { useGlobal } from \"reactn\";\nimport * as outputNLP from \"./../../data/outputNLP.json\";\n\nconst initialFormState = {\n  raname: \"\",\n  articleNo: \"\",\n  articleName: \"\",\n};\n\nconst AddArticle = () => {\n\n  const formItemLayout = {};\n  const [global] = useGlobal();\n  const [loading, setLoading] = useState(false);\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n  const [addArticle, setAddArticle] = useState(initialFormState);\n  const [formVariables, setFormVariables] = useState([{ id: \"\", key: \"\", value: \"\" }])\n  const [formVariations, setFormVariations] = useState([{ value: \"\" }])\n  const [formStdClauses, setFormStdClauses] = useState([{ value: \"\" }])\n  const [input, setInput] = useState(true);\n\n\n  const openNotificationWithIcon = (type, title, description) => {\n    notification[type]({\n      message: title,\n      description: description,\n    });\n  };\n\n  const onClick = () => {\n    const value = global.value;\n    addArticle.raname = value;\n    setAddArticle(prevValue => ({ ...prevValue, raname: value }));\n  }\n\n  function handleChange(event) {\n    const value = event.target.value;\n    console.log(value);\n    setAddArticle({\n      ...addArticle,\n      [event.target.name]: value\n    });\n  }\n\n  const handleVariablesChange = (i, e) => {\n    let newFormVariables = [...formVariables];\n    newFormVariables[i][e.target.name] = e.target.value;\n    setFormVariables(newFormVariables);\n  }\n\n  const handleVariationsChange = (i, e) => {\n    let newFormVariations = [...formVariations];\n    newFormVariations[i][e.target.name] = e.target.value;\n    setFormVariations(newFormVariations);\n  }\n\n  const handleStdClausesChange = (i, e) => {\n    let newFormStdClauses = [...formStdClauses];\n    newFormStdClauses[i][e.target.name] = e.target.value;\n    setFormStdClauses(newFormStdClauses);\n  }\n\n  const onChange = (value) => {\n    setAddArticle({ ...addArticle, articleNo: value })\n    addArticle.articleNo = value;\n    outputNLP.NLP.map(item => {\n      item.articles.map(data => {\n        if (data.id == value) {\n          setAddArticle({ ...addArticle, articleName: data.article })\n          addArticle.articleName = data.article;\n        }\n      })\n    })\n  };\n\n  let addVariablesFields = () => {\n    setFormVariables([...formVariables, { id: \"\", key: \"\", value: \"\" }])\n  }\n\n  let removeVariablesFields = (i) => {\n    let newFormVariables = [...formVariables];\n    newFormVariables.splice(i, 1);\n    setFormVariables(newFormVariables)\n  }\n\n  let addVariationsFields = () => {\n    setFormVariations([...formVariations, { value: \"\" }])\n  }\n\n  let removeVariationsFields = (i) => {\n    let newFormVariations = [...formVariations];\n    newFormVariations.splice(i, 1);\n    setFormVariations(newFormVariations)\n  }\n\n  let addStdClausesFields = () => {\n    setFormStdClauses([...formStdClauses, { value: \"\" }])\n  }\n\n  let removeStdClausesFields = (i) => {\n    let newFormStdClauses = [...formStdClauses];\n    newFormStdClauses.splice(i, 1);\n    setFormStdClauses(newFormStdClauses)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true)\n    const jwtToken = localStorage.getItem(\"token\");\n    axios\n      .post(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/proposeAddArticle`, { addArticle, formVariables, formVariations, formStdClauses, userDetails }, { headers: { \"Authorization\": `Bearer ${jwtToken}` } })\n      .then((res) => {\n        console.log(addArticle);\n        if (res.status === 200) {\n          openNotificationWithIcon(\n            \"success\",\n            \"SUCCESSFULLY REGISTERED AGREEMENT\"\n          );\n        }\n        if (res.status === 201) {\n          openNotificationWithIcon(\n            \"error\",\n            \"MISSING VALUES TO CREATE THE AGREEMENT\"\n          );\n        }\n        if (res.status === 202) {\n          openNotificationWithIcon(\n            \"error\",\n            \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\"\n          );\n        }\n      })\n      .catch(() =>\n        openNotificationWithIcon(\n          \"error\",\n          \"UNREGISTERED ROAMING AGREEMENT\",\n        )\n      )\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <section className=\"CommentsWrapper\">\n      <h2> PROPOSE ARTICLES FOR ROAMING AGREEMENT</h2>\n      <Row gutter={[16, 16]} type=\"flex\">\n        <Col xl={24} lg={24} md={24}>\n          <Form\n            {...formItemLayout}\n            name=\"basic\"\n            initialvalues={{\n              remember: true\n            }}\n            onSubmit={handleSubmit}\n          >\n            <Spin spinning={loading}>\n              <Col lg={1} md={24}></Col>\n              <Col lg={23} md={24}>\n                <Form.Item\n                  label=\"NAME OF THE ROAMING AGREEMENT\"\n                  name=\"raname\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"NAME OF THE ROAMING AGREEMENT\"\n                    }\n                  ]}\n                >\n                  <Input\n                    size=\"large\"\n                    placeholder={\"Name of the Roaming Agreement\"}\n                    suffix={\n                      <Clipboard onClick={onClick} style={{ background: 'white', border: '0px', outline: '0px' }}>\n                        <Tooltip title=\"Paste raname Name\">\n                          <NewIco type=\"snippets\" style={{ color: 'black', fontSize: 'x-large' }} />\n                        </Tooltip>\n                      </Clipboard>\n                    }\n                    type=\"text\"\n                    name=\"raname\"\n                    value={addArticle.raname}\n                    onChange={handleChange}\n                    style={{ width: '40.5%' }}\n                  />\n                </Form.Item>\n\n                <Form.Item hasFeedback>\n                  {outputNLP.NLP.map((item, index) => (\n                    <Row>\n                      <Form.Item\n                        label=\"SELECT ARTICLE ID AND NAME\"\n                      >\n                        <Col span={2} >\n                          <AutoComplete\n                            size=\"large\"\n                            dataSource={item.articles.map(data => data.id)}\n                            placeholder={\"ID\"}\n                            onSelect={(data) => data}\n                            onChange={onChange}\n                            style={{ width: '75%' }}\n                          />\n                        </Col>\n                        <Col span={14}>\n                          <Input\n                            size=\"large\"\n                            style={{ width: '55%' }}\n                            placeholder={\"Name of the Article\"}\n                            defaultValue={addArticle.articleName}\n                            value={addArticle.articleName}\n                          />\n                        </Col>\n                        <Col span={8} ></Col>\n                      </Form.Item>\n\n                      <Form.Item label=\"SELECT VARIABLES\">\n                        {formVariables.map((element, index) => (\n                          <Row >\n                            <Col span={2}>\n                              <Input\n                                name=\"id\"\n                                size=\"large\"\n                                placeholder={\"ID\"}\n                                style={{ width: '82%' }}\n                                type=\"number\"\n                                value={element.id}\n                                onChange={e => handleVariablesChange(index, e)}\n                              />\n                            </Col>\n                            <Col span={3} >\n                              <Input\n                                name=\"key\"\n                                size=\"large\"\n                                placeholder={\"Key\"}\n                                style={{ width: '85%' }}\n                                type=\"text\"\n                                value={element.key || \"\"}\n                                onChange={e => handleVariablesChange(index, e)}\n                              >\n                              </Input>\n\n                            </Col>\n                            <Col span={5}>\n                              <Input\n                                name=\"value\"\n                                size=\"large\"\n                                placeholder={\"Value\"}\n                                style={{ width: '94%' }}\n                                type=\"text\"\n                                value={element.value || \"\"}\n                                onChange={e => handleVariablesChange(index, e)}\n                              />\n                            </Col>\n                            <Col span={1}>\n                              {\n                                index ?\n                                  <Button\n                                    size=\"large\"\n                                    icon=\"minus\"\n                                    onClick={() => removeVariablesFields(index)}\n                                    style={{ background: \"gray\", width: '80%' }}\n                                  >\n                                  </Button>\n                                  : null\n                              }\n                            </Col>\n                            <Col span={1}>\n                              <Button\n                                size=\"large\"\n                                type=\"primary\"\n                                icon=\"plus\"\n                                style={{ width: '80%' }}\n                                onClick={addVariablesFields}\n                              >\n                              </Button>\n                            </Col>\n                            <Col span={8}></Col>\n                          </Row>\n                        ))}\n                      </Form.Item>\n\n                      <Form.Item label=\"SELECT VARIATIONS\">\n                        {formVariations.map((element, index) => (\n                          <Row >\n                            <Col span={20}>\n                              <Input\n                                name=\"value\"\n                                size=\"large\"\n                                placeholder={\"Variation\"}\n                                style={{ width: '99%' }}\n                                type=\"number\"\n                                value={element.value}\n                                onChange={e => handleVariationsChange(index, e)}\n                              />\n                            </Col>\n                            <Col span={1}>\n                              {\n                                index ?\n                                  <Button\n                                    size=\"large\"\n                                    icon=\"minus\"\n                                    onClick={() => removeVariationsFields(index)}\n                                    style={{ background: \"gray\", width: '80%' }}\n                                  >\n                                  </Button>\n                                  : null\n                              }\n                            </Col>\n                            <Col span={1}>\n                              <Button\n                                size=\"large\"\n                                type=\"primary\"\n                                icon=\"plus\"\n                                style={{ width: '80%' }}\n                                onClick={addVariationsFields}\n                              >\n                              </Button>\n                            </Col>\n                            <Col span={2}></Col>\n                          </Row>\n                        ))}\n                      </Form.Item>\n\n                      <Form.Item label=\"SELECT STANDARD CLAUSES\">\n                        {formStdClauses.map((element, index) => (\n                          <Row >\n                            <Col span={20}>\n                              <Input\n                                name=\"value\"\n                                size=\"large\"\n                                placeholder={\"Standard Clause\"}\n                                style={{ width: '99%' }}\n                                type=\"number\"\n                                value={element.value}\n                                onChange={e => handleStdClausesChange(index, e)}\n                              />\n                            </Col>\n                            <Col span={1}>\n                              {\n                                index ?\n                                  <Button\n                                    size=\"large\"\n                                    icon=\"minus\"\n                                    onClick={() => removeStdClausesFields(index)}\n                                    style={{ background: \"gray\", width: '80%' }}\n                                  >\n                                  </Button>\n                                  : null\n                              }\n                            </Col>\n                            <Col span={1}>\n                              <Button\n                                size=\"large\"\n                                type=\"primary\"\n                                icon=\"plus\"\n                                style={{ width: '80%' }}\n                                onClick={addStdClausesFields}\n                              >\n                              </Button>\n                            </Col>\n                            <Col span={2}></Col>\n                          </Row>\n                        ))}\n                      </Form.Item>\n\n                      <Form.Item label=\"ENABLE CUSTOM TEXTS\">\n                        <Switch >\n                          onChange={() => {\n                            setInput(!input);\n                          }}\n                        </Switch>\n                        <Input\n                          disabled={input}\n                        />\n                      </Form.Item>\n\n                    </Row>\n                  ))}\n                </Form.Item>\n\n                <Form.Item>\n                  <br />\n                  <Button\n                    size=\"large\"\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    block\n                    style={{ width: '40.5%' }}\n                  >\n                    PROPOSE ARTICLE\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Spin>\n          </Form>\n        </Col>\n      </Row>\n    </section >\n  );\n};\n\nexport default AddArticle;"]},"metadata":{},"sourceType":"module"}