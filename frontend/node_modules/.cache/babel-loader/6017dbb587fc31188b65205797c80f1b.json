{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _defineProperty from \"/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _slicedToArray from \"/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/auto-complete/style\";\nimport _AutoComplete from \"antd/es/auto-complete\";\nvar _jsxFileName = \"/app/src/pages/AddArticle/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport \"./../../App.css\";\nimport axios from \"axios\";\nimport Clipboard from 'react-clipboard.js';\nimport { useGlobal } from \"reactn\";\nimport * as outputNLP from \"./../../data/outputNLP.json\";\nconst Option = _AutoComplete.Option,\n      OptGroup = _AutoComplete.OptGroup;\nconst initialFormState = {\n  raname: \"\",\n  articleNo: \"\",\n  articleName: \"\",\n  variables: \"\"\n};\nconst _defaultCosts = [{\n  id: \"\",\n  key: \"\",\n  value: \"\"\n}];\n\nconst AddArticle = () => {\n  const formItemLayout = {};\n\n  const _useGlobal = useGlobal(),\n        _useGlobal2 = _slicedToArray(_useGlobal, 1),\n        global = _useGlobal2[0];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(_defaultCosts),\n        _useState4 = _slicedToArray(_useState3, 2),\n        costs = _useState4[0],\n        setCosts = _useState4[1];\n\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n\n  const _useState5 = useState(initialFormState),\n        _useState6 = _slicedToArray(_useState5, 2),\n        addArticle = _useState6[0],\n        setAddArticle = _useState6[1];\n\n  const openNotificationWithIcon = (type, title, description) => {\n    _notification[type]({\n      message: title,\n      description: description\n    });\n  };\n\n  const onClick = () => {\n    const value = global.value;\n    addArticle.raname = value;\n    setAddArticle(prevValue => _objectSpread({}, prevValue, {\n      raname: value\n    }));\n  };\n\n  const _useState7 = useState([{\n    name: \"\",\n    email: \"\"\n  }]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        formValues = _useState8[0],\n        setFormValues = _useState8[1];\n\n  let addFormFields = () => {\n    setFormValues([...formValues, {\n      name: \"\",\n      email: \"\"\n    }]);\n  };\n\n  function handleChange(event) {\n    const value = event.target.value;\n    console.log(value);\n    setAddArticle(_objectSpread({}, addArticle, {\n      [event.target.name]: value\n    }));\n  }\n\n  const handleCostsChange = event => {\n    const _tempCosts = [...costs];\n    _tempCosts[event.target.dataset.id][event.target.name] = event.target.value;\n    setCosts(_tempCosts);\n  };\n\n  const onChange = value => {\n    setAddArticle(_objectSpread({}, addArticle, {\n      articleNo: value\n    }));\n    addArticle.articleNo = value;\n    outputNLP.NLP.map(item => {\n      item.articles.map(data => {\n        if (data.id == value) {\n          setAddArticle(_objectSpread({}, addArticle, {\n            articleName: data.article\n          }));\n          addArticle.articleName = data.article;\n          setAddArticle(_objectSpread({}, addArticle, {\n            variables: data.variables\n          }));\n          addArticle.variables = data.variables;\n        }\n      });\n    });\n  };\n\n  const removeFormFields = i => {\n    let formValues = this.state.formValues;\n    formValues.splice(i, 1);\n    this.setState({\n      formValues\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    const jwtToken = localStorage.getItem(\"token\");\n    axios.post(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/proposeAddArticle\"), {\n      addArticle,\n      userDetails\n    }, {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(jwtToken)\n      }\n    }).then(res => {\n      console.log(addArticle);\n\n      if (res.status === 200) {\n        openNotificationWithIcon(\"success\", \"SUCCESSFULLY REGISTERED AGREEMENT\");\n      }\n\n      if (res.status === 201) {\n        openNotificationWithIcon(\"error\", \"MISSING VALUES TO CREATE THE AGREEMENT\");\n      }\n\n      if (res.status === 202) {\n        openNotificationWithIcon(\"error\", \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\");\n      }\n    }).catch(() => openNotificationWithIcon(\"error\", \"UNREGISTERED ROAMING AGREEMENT\")).finally(() => setLoading(false));\n  };\n\n  return React.createElement(\"section\", {\n    className: \"CommentsWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \" PROPOSE ARTICLES FOR ROAMING AGREEMENT\"), React.createElement(_Row, {\n    gutter: [16, 16],\n    type: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    xl: 24,\n    lg: 24,\n    md: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n    name: \"basic\",\n    initialvalues: {\n      remember: true\n    },\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(_Spin, {\n    spinning: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    lg: 1,\n    md: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(_Col, {\n    lg: 23,\n    md: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(_Form.Item, {\n    label: \"NAME OF THE ROAMING AGREEMENT\",\n    name: \"raname\",\n    rules: [{\n      required: true,\n      message: \"NAME OF THE ROAMING AGREEMENT\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    size: \"large\",\n    placeholder: \"Name of the Roaming Agreement\",\n    suffix: React.createElement(Clipboard, {\n      onClick: onClick,\n      style: {\n        background: 'white',\n        border: '0px',\n        outline: '0px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"Paste raname Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"snippets\",\n      style: {\n        color: 'black',\n        fontSize: 'x-large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))),\n    type: \"text\",\n    name: \"raname\",\n    value: addArticle.raname,\n    onChange: handleChange,\n    style: {\n      width: '40.5%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), React.createElement(_Form.Item, {\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, outputNLP.NLP.map((item, index) => React.createElement(_Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(_Form.Item, {\n    label: \"SELECT ARTICLE ID AND NAME\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    span: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(_AutoComplete, {\n    size: \"large\",\n    dataSource: item.articles.map(data => data.id),\n    placeholder: \"ID\",\n    onSelect: data => data,\n    onChange: onChange,\n    style: {\n      width: '75%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    size: \"large\",\n    style: {\n      width: '55%'\n    },\n    placeholder: \"Name of the Article\",\n    defaultValue: addArticle.articleName,\n    value: addArticle.articleName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), React.createElement(_Form.Item, {\n    label: \"SELECT VARIABLES\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(_Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    span: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    name: \"id\",\n    size: \"large\",\n    placeholder: \"ID\",\n    style: {\n      width: '82%'\n    },\n    type: \"number\",\n    value: item.id,\n    onChange: handleCostsChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    name: \"key\",\n    size: \"large\",\n    placeholder: \"Key\",\n    style: {\n      width: '85%'\n    },\n    type: \"text\",\n    value: item.key,\n    onChange: handleCostsChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    name: \"value\",\n    size: \"large\",\n    placeholder: \"Value\",\n    style: {\n      width: '94%'\n    },\n    type: \"text\",\n    value: item.value,\n    onChange: handleCostsChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(_Button, {\n    size: \"large\",\n    icon: \"minus\",\n    onClick: () => removeFormFields(index),\n    style: {\n      background: \"gray\",\n      width: '80%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(_Button, {\n    size: \"large\",\n    type: \"primary\",\n    icon: \"plus\",\n    style: {\n      width: '80%'\n    },\n    onClick: addNewCost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  })))))), React.createElement(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }), React.createElement(_Button, {\n    size: \"large\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    style: {\n      width: '40.5%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"PROPOSE ARTICLE\"))))))));\n};\n\nexport default AddArticle;","map":{"version":3,"sources":["/app/src/pages/AddArticle/index.js"],"names":["React","useState","axios","Clipboard","useGlobal","outputNLP","Option","OptGroup","initialFormState","raname","articleNo","articleName","variables","_defaultCosts","id","key","value","AddArticle","formItemLayout","global","loading","setLoading","costs","setCosts","userDetails","JSON","parse","localStorage","getItem","addArticle","setAddArticle","openNotificationWithIcon","type","title","description","message","onClick","prevValue","name","email","formValues","setFormValues","addFormFields","handleChange","event","target","console","log","handleCostsChange","_tempCosts","dataset","onChange","NLP","map","item","articles","data","article","removeFormFields","i","state","splice","setState","handleSubmit","e","preventDefault","jwtToken","post","process","env","REACT_APP_GATEWAY_HOST","REACT_APP_GATEWAY_PORT","headers","then","res","status","catch","finally","remember","required","background","border","outline","color","fontSize","width","index","addNewCost"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  AutoComplete,\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Spin,\n  notification,\n  Tooltip,\n  Select\n} from \"antd\";\nimport \"./../../App.css\";\nimport axios from \"axios\";\nimport { Icon as NewIco } from \"antd\";\nimport Clipboard from 'react-clipboard.js';\nimport { useGlobal } from \"reactn\";\nimport * as outputNLP from \"./../../data/outputNLP.json\";\n\nconst { Option, OptGroup } = AutoComplete;\nconst initialFormState = {\n  raname: \"\",\n  articleNo: \"\",\n  articleName: \"\",\n  variables: \"\"\n};\n\nconst _defaultCosts = [\n  {\n    id: \"\",\n    key: \"\",\n    value: \"\",\n  }\n];\n\nconst AddArticle = () => {\n\n  const formItemLayout = {};\n  const [global] = useGlobal();\n  const [loading, setLoading] = useState(false);\n  const [costs, setCosts] = useState(_defaultCosts);\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n  const [addArticle, setAddArticle] = useState(initialFormState);\n\n\n  const openNotificationWithIcon = (type, title, description) => {\n    notification[type]({\n      message: title,\n      description: description,\n    });\n  };\n\n  const onClick = () => {\n    const value = global.value;\n    addArticle.raname = value;\n    setAddArticle(prevValue => ({ ...prevValue, raname: value }));\n  }\n  const [formValues, setFormValues] = useState([{ name: \"\", email: \"\" }])\n\n  let addFormFields = () => {\n    setFormValues([...formValues, { name: \"\", email: \"\" }])\n  }\n\n  function handleChange(event) {\n    const value = event.target.value;\n    console.log(value);\n    setAddArticle({\n      ...addArticle,\n      [event.target.name]: value\n    });\n  }\n\n  const handleCostsChange = event => {\n    const _tempCosts = [...costs];\n    _tempCosts[event.target.dataset.id][event.target.name] = event.target.value;\n    setCosts(_tempCosts);\n  };\n\n  const onChange = (value) => {\n    setAddArticle({ ...addArticle, articleNo: value })\n    addArticle.articleNo = value;\n    outputNLP.NLP.map(item => {\n      item.articles.map(data => {\n        if (data.id == value) {\n          setAddArticle({ ...addArticle, articleName: data.article })\n          addArticle.articleName = data.article;\n          setAddArticle({ ...addArticle, variables: data.variables })\n          addArticle.variables = data.variables;\n        }\n      })\n    })\n  };\n\n  const removeFormFields = (i) => {\n    let formValues = this.state.formValues;\n    formValues.splice(i, 1);\n    this.setState({ formValues });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true)\n    const jwtToken = localStorage.getItem(\"token\");\n    axios\n      .post(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/proposeAddArticle`, { addArticle, userDetails }, { headers: { \"Authorization\": `Bearer ${jwtToken}` } })\n      .then((res) => {\n        console.log(addArticle);\n        if (res.status === 200) {\n          openNotificationWithIcon(\n            \"success\",\n            \"SUCCESSFULLY REGISTERED AGREEMENT\"\n          );\n        }\n        if (res.status === 201) {\n          openNotificationWithIcon(\n            \"error\",\n            \"MISSING VALUES TO CREATE THE AGREEMENT\"\n          );\n        }\n        if (res.status === 202) {\n          openNotificationWithIcon(\n            \"error\",\n            \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\"\n          );\n        }\n      })\n      .catch(() =>\n        openNotificationWithIcon(\n          \"error\",\n          \"UNREGISTERED ROAMING AGREEMENT\",\n        )\n      )\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <section className=\"CommentsWrapper\">\n      <h2> PROPOSE ARTICLES FOR ROAMING AGREEMENT</h2>\n      <Row gutter={[16, 16]} type=\"flex\">\n        <Col xl={24} lg={24} md={24}>\n          <Form\n            {...formItemLayout}\n            name=\"basic\"\n            initialvalues={{\n              remember: true\n            }}\n            onSubmit={handleSubmit}\n          >\n            <Spin spinning={loading}>\n              <Col lg={1} md={24}></Col>\n              <Col lg={23} md={24}>\n                <Form.Item\n                  label=\"NAME OF THE ROAMING AGREEMENT\"\n                  name=\"raname\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"NAME OF THE ROAMING AGREEMENT\"\n                    }\n                  ]}\n                >\n                  <Input\n                    size=\"large\"\n                    placeholder={\"Name of the Roaming Agreement\"}\n                    suffix={\n                      <Clipboard onClick={onClick} style={{ background: 'white', border: '0px', outline: '0px' }}>\n                        <Tooltip title=\"Paste raname Name\">\n                          <NewIco type=\"snippets\" style={{ color: 'black', fontSize: 'x-large' }} />\n                        </Tooltip>\n                      </Clipboard>\n                    }\n                    type=\"text\"\n                    name=\"raname\"\n                    value={addArticle.raname}\n                    onChange={handleChange}\n                    style={{ width: '40.5%' }}\n                  />\n                </Form.Item>\n\n                <Form.Item hasFeedback>\n                  {outputNLP.NLP.map((item, index) => (\n                    <Row>\n                      <Form.Item\n                        label=\"SELECT ARTICLE ID AND NAME\"\n                      >\n                        <Col span={2} >\n                          <AutoComplete\n                            size=\"large\"\n                            dataSource={item.articles.map(data => data.id)}\n                            placeholder={\"ID\"}\n                            onSelect={(data) => data}\n                            onChange={onChange}\n                            style={{ width: '75%' }}\n                          />\n                        </Col>\n                        <Col span={14}>\n                          <Input\n                            size=\"large\"\n                            style={{ width: '55%' }}\n                            placeholder={\"Name of the Article\"}\n                            defaultValue={addArticle.articleName}\n                            value={addArticle.articleName}\n                          />\n                        </Col>\n                        <Col span={8} ></Col>\n                      </Form.Item>\n                      <Form.Item label=\"SELECT VARIABLES\">\n                        <Row >\n                          <Col span={2}>\n                            <Input\n                              name=\"id\"\n                              size=\"large\"\n                              placeholder={\"ID\"}\n                              style={{ width: '82%' }}\n                              type=\"number\"\n                              value={item.id}\n                              onChange={handleCostsChange}\n                            />\n                          </Col>\n                          <Col span={3} >\n                            <Input\n                              name=\"key\"\n                              size=\"large\"\n                              placeholder={\"Key\"}\n                              style={{ width: '85%' }}\n                              type=\"text\"\n                              value={item.key}\n                              onChange={handleCostsChange}\n                            >\n                            </Input>\n\n                          </Col>\n                          <Col span={5}>\n                            <Input\n                              name=\"value\"\n                              size=\"large\"\n                              placeholder={\"Value\"}\n                              style={{ width: '94%' }}\n                              type=\"text\"\n                              value={item.value}\n                              onChange={handleCostsChange}\n                            />\n                          </Col>\n                          <Col span={1}>\n                            <Button\n                              size=\"large\"\n                              icon=\"minus\"\n                              onClick={() => removeFormFields(index)}\n                              style={{ background: \"gray\", width: '80%' }}\n                            >\n                            </Button>\n                          </Col>\n                          <Col span={1}>\n                            <Button\n                              size=\"large\"\n                              type=\"primary\"\n                              icon=\"plus\"\n                              style={{ width: '80%' }}\n                              onClick={addNewCost}\n                            >\n                            </Button>\n                          </Col>\n                          <Col span={8}></Col>\n                        </Row>\n                      </Form.Item>\n                    </Row>\n                  ))}\n                </Form.Item>\n\n                <Form.Item>\n                  <br />\n                  <Button\n                    size=\"large\"\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    block\n                    style={{ width: '40.5%' }}\n                  >\n                    PROPOSE ARTICLE\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Spin>\n          </Form>\n        </Col>\n      </Row>\n    </section >\n  );\n};\n\nexport default AddArticle;"]},"metadata":{},"sourceType":"module"}