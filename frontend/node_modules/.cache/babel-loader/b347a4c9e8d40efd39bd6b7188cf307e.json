{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _defineProperty from \"/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nvar _jsxFileName = \"/app/src/pages/List/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport { useGlobal } from \"reactn\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport Search from \"../../components/table/search\";\nimport SearchDates from \"../../components/table/searchDates\"; //---------------------------------------------------------------------------------------------\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; //---------------------------------------------------------------------------------------------\n\n_notification.config({\n  placement: \"topRight\",\n  bottom: 50,\n  duration: 1.5\n});\n\nconst RenderList = () => {\n  const EditableContext = React.createContext();\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n  const initialFormState = {\n    mno1: \"\",\n    country_mno1: \"\",\n    mno2: \"\",\n    country_mno2: \"\",\n    ra_name: \"\",\n    ra_status: \"\",\n    timestamp: \"\"\n  };\n  const copyState = {\n    value: '',\n    copied: false\n  };\n\n  const _useState = useState([initialFormState]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const _useState3 = useState([copyState]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        copy = _useState4[0],\n        setCopy = _useState4[1];\n\n  const _useGlobal = useGlobal(),\n        _useGlobal2 = _slicedToArray(_useGlobal, 2),\n        setGlobal = _useGlobal2[1];\n\n  const onCopy = value => {\n    copy.value = value;\n    setCopy({\n      copied: true\n    });\n    setGlobal({\n      value: value\n    });\n    setGlobal({\n      copied: true\n    });\n  };\n\n  const openNotificationWithIcon = (type, title, description) => {\n    _notification[type]({\n      message: title,\n      description: description\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/list\"), {\n      params: {\n        ID: userDetails\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setList(res.data);\n\n      if (res.ok) {\n        return res.json();\n      }\n\n      throw res;\n    }).then(resJson => {\n      setList(resJson);\n    }).catch(error => {});\n  }, []); // Execut some element of the array changue\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(e);\n    const jwtToken = localStorage.getItem(\"token\"); //Set POST request\n\n    axios.post(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/acceptAgreementInitiation\"), {\n      userDetails\n    }, {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(jwtToken)\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        openNotificationWithIcon(\"success\", \"SUCCESSFULLY REGISTERED AGREEMENT\");\n      }\n\n      if (res.status === 201) {\n        openNotificationWithIcon(\"error\", \"MISSING VALUES TO CREATE THE AGREEMENT\");\n      }\n\n      if (res.status === 202) {\n        openNotificationWithIcon(\"error\", \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\");\n      }\n    }).catch(() => openNotificationWithIcon(\"error\", \"UNREGISTERED ROAMING AGREEMENT\"));\n  };\n\n  const columns = [_objectSpread({\n    title: \"MNO1 Name\",\n    dataIndex: \"mno1\",\n    key: \"mno1\"\n  }, Search(\"mno1\", \"MNO Name\"), {\n    align: 'center',\n    render: mno1 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, mno1), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: mno1,\n      onCopy: onCopy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"Copy the name of MNO1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"copy\",\n      style: {\n        color: 'black',\n        fontSize: 'large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })))))\n  }), _objectSpread({\n    title: \"MNO Country\",\n    dataIndex: \"country_mno1\",\n    key: \"country_mno1\"\n  }, Search(\"country_mno1\", \"por precio del Token\"), {\n    align: 'center',\n    render: country_mno1 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(ReactCountryFlag, {\n      countryCode: country_mno1,\n      svg: true,\n      style: {\n        width: '2em',\n        height: '2em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })))\n  }), _objectSpread({\n    title: \"MNO2 Name\",\n    dataIndex: \"mno2\",\n    key: \"mno2\"\n  }, Search(\"mno2\", \"MNO Name\"), {\n    align: 'center',\n    render: mno2 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, mno2), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: mno2,\n      onCopy: onCopy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"Copy the name of MNO2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"copy\",\n      style: {\n        color: 'black',\n        fontSize: 'large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })))))\n  }), _objectSpread({\n    title: \"MNO Country\",\n    dataIndex: \"country_mno2\",\n    key: \"country_mno2\"\n  }, Search(\"country_mno2\", \"por precio del Token\"), {\n    align: 'center',\n    render: country_mno2 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(ReactCountryFlag, {\n      countryCode: country_mno2,\n      svg: true,\n      style: {\n        width: '2em',\n        height: '2em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })))\n  }), _objectSpread({\n    title: \"RA name\",\n    dataIndex: \"ra_name\",\n    key: \"ra_name\"\n  }, Search(\"ra_name\", \"por precio del Token\"), {\n    align: 'center',\n    render: ra_name => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, ra_name), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: ra_name,\n      onCopy: onCopy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"Copy name of Roaming Agreement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"copy\",\n      style: {\n        color: 'black',\n        fontSize: 'large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })))))\n  }), {\n    title: \"RA Status\",\n    dataIndex: \"ra_status\",\n    key: \"ra_status\",\n    filters: [{\n      text: \"Comprable\",\n      value: \"comprable\"\n    }, {\n      text: \"No vendible\",\n      value: \"no vendible\"\n    }],\n    filterMultiple: false,\n    onFilter: (value, record) => record.ra_status.toLowerCase().includes(value),\n\n    render(ra_status, record) {\n      return {\n        children: React.createElement(_Tag, {\n          color: ra_status === \"INIT\" ? 'green' : 'volcano',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, ra_status)\n      };\n    },\n\n    align: 'center'\n  }, _objectSpread({\n    title: \"Date of status change\",\n    dataIndex: \"timestamp\",\n    key: \"timestamp\",\n    sorter: (a, b) => moment(a.timestamp).unix() - moment(b.timestamp).unix(),\n    defaultSortOrder: \"descend\"\n  }, SearchDates(\"timestamp\"), {\n    render: date => moment(date * 1000).format(\"DD/MM/YYYY\"),\n    align: 'center'\n  }), {\n    title: \"action\",\n    dataIndex: \"mno2\",\n    key: \"action\",\n    align: 'center',\n    render: record => {\n      React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: handleSubmit,\n        style: {\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }];\n  return React.createElement(\"section\", {\n    className: \"CommentsWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, \"MOBILE NETWORK OPERATORS IN ROAMING AGREEMENTS\"), React.createElement(_Table, {\n    bordered: true,\n    rowKey: \"mno1\",\n    columns: columns,\n    expandedRowRender: record => React.createElement(\"p\", {\n      style: {\n        margin: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"This place will contain information to update and delete articles\"),\n    dataSource: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }));\n};\n\nexport default RenderList;","map":{"version":3,"sources":["/app/src/pages/List/index.js"],"names":["React","useState","useEffect","ReactCountryFlag","useGlobal","moment","axios","Search","SearchDates","CopyToClipboard","config","placement","bottom","duration","RenderList","EditableContext","createContext","userDetails","JSON","parse","localStorage","getItem","initialFormState","mno1","country_mno1","mno2","country_mno2","ra_name","ra_status","timestamp","copyState","value","copied","list","setList","copy","setCopy","setGlobal","onCopy","openNotificationWithIcon","type","title","description","message","get","process","env","REACT_APP_GATEWAY_HOST","REACT_APP_GATEWAY_PORT","params","ID","headers","then","res","data","ok","json","resJson","catch","error","handleSubmit","e","preventDefault","console","log","jwtToken","post","status","columns","dataIndex","key","align","render","color","fontSize","width","height","filters","text","filterMultiple","onFilter","record","toLowerCase","includes","children","sorter","a","b","unix","defaultSortOrder","date","format","marginRight","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactCountryFlag from \"react-country-flag\"\nimport { useGlobal } from \"reactn\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { Button, Icon, Col, notification, Row, Table, Tag, Tooltip } from \"antd\";\nimport Search from \"../../components/table/search\";\nimport SearchDates from \"../../components/table/searchDates\";\n//---------------------------------------------------------------------------------------------\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n//---------------------------------------------------------------------------------------------\n\nnotification.config({\n  placement: \"topRight\",\n  bottom: 50,\n  duration: 1.5,\n});\n\nconst RenderList = () => {\n\n  const EditableContext = React.createContext();\n\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n\n  const initialFormState = {\n    mno1: \"\",\n    country_mno1: \"\",\n    mno2: \"\",\n    country_mno2: \"\",\n    ra_name: \"\",\n    ra_status: \"\",\n    timestamp: \"\",\n  };\n  const copyState = {\n    value: '',\n    copied: false,\n  };\n\n  const [list, setList] = useState([initialFormState]);\n  const [copy, setCopy] = useState([copyState]);\n  const [, setGlobal] = useGlobal();\n\n  const onCopy = (value) => {\n    copy.value = value;\n    setCopy({ copied: true })\n    setGlobal({ value: value })\n    setGlobal({ copied: true })\n  }\n\n  const openNotificationWithIcon = (type, title, description) => {\n    notification[type]({\n      message: title,\n      description: description,\n    });\n  };\n\n  useEffect(() => {\n    axios\n      .get(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/list`, {\n        params: { ID: userDetails },\n        headers: { 'Content-Type': 'application/json' }\n      })\n      .then(res => {\n        setList(res.data);\n        if (res.ok) {\n          return res.json();\n        }\n        throw res;\n      })\n      .then(resJson => {\n        setList(resJson);\n      })\n      .catch(error => { });\n  }, []); // Execut some element of the array changue\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(e);\n    const jwtToken = localStorage.getItem(\"token\");\n    //Set POST request\n    axios\n      .post(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/acceptAgreementInitiation`, { userDetails }, { headers: { \"Authorization\": `Bearer ${jwtToken}` } })\n      .then((res) => {\n        if (res.status === 200) {\n          openNotificationWithIcon(\n            \"success\",\n            \"SUCCESSFULLY REGISTERED AGREEMENT\"\n          );\n        }\n        if (res.status === 201) {\n          openNotificationWithIcon(\n            \"error\",\n            \"MISSING VALUES TO CREATE THE AGREEMENT\"\n          );\n        }\n        if (res.status === 202) {\n          openNotificationWithIcon(\n            \"error\",\n            \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\"\n          );\n        }\n      })\n      .catch(() =>\n        openNotificationWithIcon(\n          \"error\",\n          \"UNREGISTERED ROAMING AGREEMENT\",\n        )\n      )\n  };\n\n  const columns = [\n    {\n      title: \"MNO1 Name\", dataIndex: \"mno1\", key: \"mno1\", ...Search(\"mno1\", \"MNO Name\"), align: 'center',\n      render: (mno1) => (\n        <Row>\n          <Col span={20}>\n            {mno1}\n          </Col>\n          <Col span={4}>\n            <CopyToClipboard\n              text={mno1}\n              onCopy={onCopy}\n            >\n              <Tooltip title=\"Copy the name of MNO1\">\n                <Icon type=\"copy\" style={{ color: 'black', fontSize: 'large' }} />\n              </Tooltip>\n            </CopyToClipboard>\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"MNO Country\", dataIndex: \"country_mno1\", key: \"country_mno1\", ...Search(\"country_mno1\", \"por precio del Token\"), align: 'center',\n      render: (country_mno1) => (\n        <Row>\n          <Col span={20}>\n            <ReactCountryFlag countryCode={country_mno1} svg style={{\n              width: '2em',\n              height: '2em',\n            }} />\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"MNO2 Name\", dataIndex: \"mno2\", key: \"mno2\", ...Search(\"mno2\", \"MNO Name\"), align: 'center',\n      render: (mno2) => (\n        <Row>\n          <Col span={20}>\n            {mno2}\n          </Col>\n          <Col span={4}>\n            <CopyToClipboard\n              text={mno2}\n              onCopy={onCopy}\n            >\n              <Tooltip title=\"Copy the name of MNO2\">\n                <Icon type=\"copy\" style={{ color: 'black', fontSize: 'large' }} />\n              </Tooltip>\n            </CopyToClipboard>\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"MNO Country\", dataIndex: \"country_mno2\", key: \"country_mno2\", ...Search(\"country_mno2\", \"por precio del Token\"), align: 'center',\n      render: (country_mno2) => (\n        <Row>\n          <Col span={20}>\n            <ReactCountryFlag countryCode={country_mno2} svg style={{\n              width: '2em',\n              height: '2em',\n            }} />\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"RA name\", dataIndex: \"ra_name\", key: \"ra_name\", ...Search(\"ra_name\", \"por precio del Token\"), align: 'center',\n      render: (ra_name) => (\n        <Row>\n          <Col span={20}>\n            {ra_name}\n          </Col>\n          <Col span={4}>\n            <CopyToClipboard\n              text={ra_name}\n              onCopy={onCopy}\n            >\n              <Tooltip title=\"Copy name of Roaming Agreement\">\n                <Icon type=\"copy\" style={{ color: 'black', fontSize: 'large' }} />\n              </Tooltip>\n            </CopyToClipboard>\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"RA Status\", dataIndex: \"ra_status\", key: \"ra_status\",\n      filters: [\n        { text: \"Comprable\", value: \"comprable\" },\n        { text: \"No vendible\", value: \"no vendible\" },\n      ],\n      filterMultiple: false,\n      onFilter: (value, record) => record.ra_status.toLowerCase().includes(value),\n      render(ra_status, record) {\n        return {\n          children: <Tag color={(ra_status) === \"INIT\" ? 'green' : 'volcano'}>{ra_status}</Tag>\n        };\n      }, align: 'center'\n    },\n    { title: \"Date of status change\", dataIndex: \"timestamp\", key: \"timestamp\", sorter: (a, b) => moment(a.timestamp).unix() - moment(b.timestamp).unix(), defaultSortOrder: \"descend\", ...SearchDates(\"timestamp\"), render: date => moment(date * 1000).format(\"DD/MM/YYYY\"), align: 'center' },\n    {\n      title: \"action\", dataIndex: \"mno2\", key: \"action\", align: 'center', render: (record) => {\n        <span>\n          <a\n            onClick={handleSubmit}\n            style={{ marginRight: 8 }}\n          >\n            Save\n          </a>\n        </span>\n      }\n    },\n  ];\n\n  return (\n    <section className=\"CommentsWrapper\">\n      <h2>MOBILE NETWORK OPERATORS IN ROAMING AGREEMENTS</h2>\n      <Table bordered rowKey=\"mno1\" columns={columns} expandedRowRender={record => <p style={{ margin: 0 }}>{\"This place will contain information to update and delete articles\"}</p>} dataSource={list} />\n    </section>\n  );\n};\n\nexport default RenderList;\n"]},"metadata":{},"sourceType":"module"}