{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar use_force_update_1 = require(\"use-force-update\");\n\nvar context_1 = require(\"./context\");\n\nvar default_global_state_manager_1 = require(\"./default-global-state-manager\");\n\nvar is_property_reducer_1 = require(\"./utils/is-property-reducer\");\n\nvar react_hooks_error_1 = require(\"./utils/react-hooks-error\");\n\nfunction _useDispatch(overrideGlobalStateManager, reducer, property) {\n  if (!react_1.useContext) {\n    throw react_hooks_error_1.default;\n  }\n\n  var forceUpdate = use_force_update_1.default();\n  var globalStateManager = overrideGlobalStateManager || react_1.useContext(context_1.default) || default_global_state_manager_1.default;\n\n  if (typeof reducer === 'undefined') {\n    return globalStateManager.dispatcherMap;\n  }\n\n  if (typeof reducer === 'function') {\n    if (is_property_reducer_1.default(reducer, property)) {\n      var newReducer = function (global, _dispatch) {\n        var args = [];\n\n        for (var _i = 2; _i < arguments.length; _i++) {\n          args[_i - 2] = arguments[_i];\n        }\n\n        var newGlobalState = Object.create(null);\n        newGlobalState[property] = reducer.apply(void 0, __spread([global[property]], args));\n        return newGlobalState;\n      };\n\n      var propertyDispatcher_1 = globalStateManager.createDispatcher(newReducer, reducer.name);\n      Object.defineProperty(propertyDispatcher_1, 0, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n          globalStateManager.addPropertyListener(property, forceUpdate);\n          return globalStateManager.state[property];\n        }\n      });\n      propertyDispatcher_1[1] = propertyDispatcher_1;\n\n      var propertyDispatcherSlice = function (start, end) {\n        var values = [propertyDispatcher_1[0], propertyDispatcher_1[1]];\n        return values.slice.apply(values, [start, end]);\n      };\n\n      propertyDispatcher_1.slice = propertyDispatcherSlice;\n\n      var propertyDispatcherIterator = function () {\n        var _a;\n\n        var index = 0;\n\n        var propertyDispatcherIteratorNext = function () {\n          if (index < 2) {\n            return {\n              done: false,\n              value: propertyDispatcher_1[index++]\n            };\n          }\n\n          index = 0;\n          return {\n            done: true,\n            value: undefined\n          };\n        };\n\n        return _a = {}, _a[Symbol.iterator] = propertyDispatcher_1[Symbol.iterator], _a.next = propertyDispatcherIteratorNext, _a;\n      };\n\n      propertyDispatcher_1[Symbol.iterator] = propertyDispatcherIterator;\n      return propertyDispatcher_1;\n    }\n\n    return globalStateManager.createDispatcher(reducer);\n  }\n\n  return globalStateManager.getDispatcher(reducer);\n}\n\nexports.default = _useDispatch;\n;","map":null,"metadata":{},"sourceType":"script"}