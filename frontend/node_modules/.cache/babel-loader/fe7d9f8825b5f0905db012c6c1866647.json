{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar context_1 = require(\"./context\");\n\nvar add_reducer_1 = require(\"./add-reducer\");\n\nvar add_reducers_1 = require(\"./add-reducers\");\n\nvar global_state_manager_1 = require(\"./global-state-manager\");\n\nvar set_global_1 = require(\"./set-global\");\n\nvar use_dispatch_1 = require(\"./use-dispatch\");\n\nvar use_global_1 = require(\"./use-global\");\n\nvar is_property_reducer_1 = require(\"./utils/is-property-reducer\");\n\nvar react_context_error_1 = require(\"./utils/react-context-error\");\n\nvar with_global_1 = require(\"./with-global\");\n\nfunction _createProvider(initialState, initialReducers) {\n  if (initialState === void 0) {\n    initialState = Object.create(null);\n  }\n\n  if (initialReducers === void 0) {\n    initialReducers = Object.create(null);\n  }\n\n  if (context_1.default === null) {\n    throw react_context_error_1.default;\n  }\n\n  var globalStateManager = new global_state_manager_1.default(initialState, initialReducers);\n  return function (_super) {\n    __extends(ReactNProvider, _super);\n\n    function ReactNProvider() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    ReactNProvider.addCallback = function (f) {\n      return globalStateManager.addCallback(f);\n    };\n\n    ReactNProvider.addReducer = function (name, reducer) {\n      return add_reducer_1.default(globalStateManager, name, reducer);\n    };\n\n    ReactNProvider.addReducers = function (reducers) {\n      return add_reducers_1.default(globalStateManager, reducers);\n    };\n\n    Object.defineProperty(ReactNProvider, \"dispatch\", {\n      get: function () {\n        return globalStateManager.dispatchers;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ReactNProvider, \"dispatcherMap\", {\n      get: function () {\n        return globalStateManager.dispatcherMap;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    ReactNProvider.getDispatch = function () {\n      return globalStateManager.dispatchers;\n    };\n\n    ReactNProvider.getGlobal = function () {\n      return globalStateManager.state;\n    };\n\n    Object.defineProperty(ReactNProvider, \"global\", {\n      get: function () {\n        return globalStateManager.state;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    ReactNProvider.removeCallback = function (callback) {\n      return globalStateManager.removeCallback(callback);\n    };\n\n    ReactNProvider.reset = function () {\n      return globalStateManager.reset();\n    };\n\n    ReactNProvider.setGlobal = function (newGlobalState, callback) {\n      if (callback === void 0) {\n        callback = null;\n      }\n\n      return set_global_1.default(globalStateManager, newGlobalState, callback);\n    };\n\n    ReactNProvider.useDispatch = function (reducer, property) {\n      if (typeof reducer === 'function') {\n        if (is_property_reducer_1.default(reducer, property)) {\n          return use_dispatch_1.default(globalStateManager, reducer, property);\n        }\n\n        return use_dispatch_1.default(globalStateManager, reducer);\n      }\n\n      return use_dispatch_1.default(globalStateManager, reducer);\n    };\n\n    ReactNProvider.useGlobal = function (property) {\n      return use_global_1.default(globalStateManager, property);\n    };\n\n    ReactNProvider.withGlobal = function (getter, setter) {\n      if (getter === void 0) {\n        getter = function (global) {\n          return global;\n        };\n      }\n\n      if (setter === void 0) {\n        setter = function () {\n          return null;\n        };\n      }\n\n      return with_global_1.default(globalStateManager, getter, setter);\n    };\n\n    ReactNProvider.prototype.render = function () {\n      return React.createElement(context_1.default.Provider, {\n        value: globalStateManager\n      }, this.props.children);\n    };\n\n    return ReactNProvider;\n  }(React.Component);\n}\n\nexports.default = _createProvider;","map":null,"metadata":{},"sourceType":"script"}