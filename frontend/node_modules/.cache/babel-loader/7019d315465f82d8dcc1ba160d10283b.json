{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _defineProperty from \"/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nvar _jsxFileName = \"/app/src/pages/List/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport { useGlobal } from \"reactn\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport Search from \"../../components/table/search\";\nimport SearchDates from \"../../components/table/searchDates\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport TextArea from \"antd/lib/input/TextArea\";\n\n_notification.config({\n  placement: \"topRight\",\n  bottom: 50,\n  duration: 1.5\n});\n\nconst RenderList = () => {\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n  const initialFormState = {\n    mno1: \"\",\n    country_mno1: \"\",\n    mno2: \"\",\n    country_mno2: \"\",\n    ra_name: \"\",\n    ra_status: \"\",\n    timestamp: \"\",\n    articles: [{\n      articleId: \"\",\n      articleName: \"\",\n      articleStatus: \"\",\n      variables: [],\n      variations: [],\n      stdclauses: [],\n      customtexts: []\n    }]\n  };\n\n  const _useState = useState([initialFormState]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const copyState = {\n    value: '',\n    copied: false\n  };\n\n  const _useState3 = useState([copyState]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        copy = _useState4[0],\n        setCopy = _useState4[1];\n\n  const _useGlobal = useGlobal(),\n        _useGlobal2 = _slicedToArray(_useGlobal, 2),\n        setGlobal = _useGlobal2[1];\n\n  const onCopy = value => {\n    copy.value = value;\n    setCopy({\n      copied: true\n    });\n    setGlobal({\n      value: value\n    });\n    setGlobal({\n      copied: true\n    });\n  };\n\n  const openNotificationWithIcon = (type, title, description) => {\n    _notification[type]({\n      message: title,\n      description: description\n    });\n  };\n\n  const clicRow = e => {\n    setSelectedRow(e);\n  };\n\n  const _useState5 = useState({\n    variables: [],\n    customtexts: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedRow = _useState6[0],\n        setSelectedRow = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isModalVisible = _useState8[0],\n        setIsModalVisible = _useState8[1];\n\n  const showModal = v => {\n    setSelectedRow(v);\n    setIsModalVisible(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  useEffect(() => {\n    axios.get(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/list\"), {\n      params: {\n        ID: userDetails\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setList(res.data);\n\n      if (res.ok) {\n        return res.json();\n      }\n\n      throw res;\n    }).then(resJson => {\n      setList(resJson);\n    }).catch(error => {});\n  }, []); // Execut some element of the array changue\n\n  const handleSubmit = (e, mno1) => {\n    e.preventDefault();\n    const jwtToken = localStorage.getItem(\"token\"); //Set POST request\n\n    axios.post(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/acceptAgreementInitiation\"), {\n      mno1,\n      userDetails\n    }, {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(jwtToken)\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        openNotificationWithIcon(\"success\", \"SUCCESSFULLY REGISTERED AGREEMENT\");\n      }\n\n      if (res.status === 201) {\n        openNotificationWithIcon(\"error\", \"MISSING VALUES TO CREATE THE AGREEMENT\");\n      }\n\n      if (res.status === 202) {\n        openNotificationWithIcon(\"error\", \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\");\n      }\n    }).catch(() => openNotificationWithIcon(\"error\", \"UNREGISTERED ROAMING AGREEMENT\"));\n  };\n\n  const handleOk = e => {\n    e.preventDefault();\n    const jwtToken = localStorage.getItem(\"token\");\n    axios.post(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/acceptProposedChanges\"), {\n      list,\n      selectedRow,\n      formVariables,\n      formCustomText,\n      userDetails\n    }, {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(jwtToken)\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        openNotificationWithIcon(\"success\", \"SUCCESSFULLY REGISTERED AGREEMENT\");\n      }\n\n      if (res.status === 201) {\n        openNotificationWithIcon(\"error\", \"MISSING VALUES TO CREATE THE AGREEMENT\");\n      }\n\n      if (res.status === 202) {\n        openNotificationWithIcon(\"error\", \"THIS MNO CANNOT ACCEPT THE CHANGES PROPOSED BY ITSELF\");\n      }\n\n      if (res.status === 203) {\n        openNotificationWithIcon(\"error\", \"NOT ALLOWED TO MODIFY VARIABLES, VARIATIONS OR CUSTOM TEXTS WHEN CHANGES ARE ACCEPTED\");\n      }\n    }).catch(() => openNotificationWithIcon(\"error\", \"UNREGISTERED ROAMING AGREEMENT\"));\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    const jwtToken = localStorage.getItem(\"token\");\n    axios.post(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/proposeUpdateArticle\"), {\n      list,\n      selectedRow,\n      formVariables,\n      formCustomText,\n      userDetails\n    }, {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(jwtToken)\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        openNotificationWithIcon(\"success\", \"SUCCESSFULLY REGISTERED AGREEMENT\");\n      }\n\n      if (res.status === 201) {\n        openNotificationWithIcon(\"error\", \"MISSING VALUES TO CREATE THE AGREEMENT\");\n      }\n\n      if (res.status === 202) {\n        openNotificationWithIcon(\"error\", \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\");\n      }\n    }).catch(() => openNotificationWithIcon(\"error\", \"UNREGISTERED ROAMING AGREEMENT\"));\n  };\n\n  const handleReject = e => {\n    e.preventDefault();\n    const jwtToken = localStorage.getItem(\"token\");\n    axios.post(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/\"), {\n      selectedRow,\n      formVariables,\n      formCustomText,\n      userDetails\n    }, {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(jwtToken)\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        openNotificationWithIcon(\"success\", \"SUCCESSFULLY REGISTERED AGREEMENT\");\n      }\n\n      if (res.status === 201) {\n        openNotificationWithIcon(\"error\", \"MISSING VALUES TO CREATE THE AGREEMENT\");\n      }\n\n      if (res.status === 202) {\n        openNotificationWithIcon(\"error\", \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\");\n      }\n    }).catch(() => openNotificationWithIcon(\"error\", \"UNREGISTERED ROAMING AGREEMENT\"));\n  };\n\n  const _useState9 = useState([{\n    key: \"\",\n    value: \"\"\n  }]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        formVariables = _useState10[0],\n        setFormVariables = _useState10[1];\n\n  const handleVariablesChange = (i, e, v) => {\n    let newFormVariables = [...formVariables];\n    newFormVariables[i] = {\n      key: v,\n      value: e.target.value\n    };\n    setFormVariables(newFormVariables);\n  };\n\n  const _useState11 = useState([{\n    value: \"\"\n  }]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        formCustomText = _useState12[0],\n        setFormCustomText = _useState12[1];\n\n  function handleCustomText(e) {\n    formCustomText[0] = {\n      value: e.target.value\n    };\n    setFormCustomText(formCustomText);\n  }\n\n  const columns = [_objectSpread({\n    title: \"MNO1 Name\",\n    dataIndex: \"mno1\",\n    key: \"mno1\"\n  }, Search(\"mno1\", \"MNO Name\"), {\n    align: 'center',\n    render: mno1 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, mno1), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: mno1,\n      onCopy: onCopy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"Copy the name of MNO1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"copy\",\n      style: {\n        color: 'black',\n        fontSize: 'large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    })))))\n  }), _objectSpread({\n    title: \"MNO Country\",\n    dataIndex: \"country_mno1\",\n    key: \"country_mno1\"\n  }, Search(\"country_mno1\", \"por precio del Token\"), {\n    align: 'center',\n    render: country_mno1 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(ReactCountryFlag, {\n      countryCode: country_mno1,\n      svg: true,\n      style: {\n        width: '2em',\n        height: '2em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    })))\n  }), _objectSpread({\n    title: \"MNO2 Name\",\n    dataIndex: \"mno2\",\n    key: \"mno2\"\n  }, Search(\"mno2\", \"MNO Name\"), {\n    align: 'center',\n    render: mno2 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, mno2), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: mno2,\n      onCopy: onCopy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"Copy the name of MNO2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"copy\",\n      style: {\n        color: 'black',\n        fontSize: 'large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })))))\n  }), _objectSpread({\n    title: \"MNO Country\",\n    dataIndex: \"country_mno2\",\n    key: \"country_mno2\"\n  }, Search(\"country_mno2\", \"por precio del Token\"), {\n    align: 'center',\n    render: country_mno2 => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(ReactCountryFlag, {\n      countryCode: country_mno2,\n      svg: true,\n      style: {\n        width: '2em',\n        height: '2em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    })))\n  }), _objectSpread({\n    title: \"RA name\",\n    dataIndex: \"ra_name\",\n    key: \"ra_name\"\n  }, Search(\"ra_name\", \"por precio del Token\"), {\n    align: 'center',\n    render: ra_name => React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, ra_name), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: ra_name,\n      onCopy: onCopy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(_Tooltip, {\n      title: \"Copy name of Roaming Agreement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"copy\",\n      style: {\n        color: 'black',\n        fontSize: 'large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    })))))\n  }), {\n    title: \"RA Status\",\n    dataIndex: \"ra_status\",\n    key: \"ra_status\",\n    align: 'center',\n    filters: [{\n      text: \"Comprable\",\n      value: \"comprable\"\n    }, {\n      text: \"No vendible\",\n      value: \"no vendible\"\n    }],\n    filterMultiple: false,\n    onFilter: (value, record) => record.ra_status.toLowerCase().includes(value),\n\n    render(ra_status, record) {\n      return {\n        children: React.createElement(_Tag, {\n          color: ra_status === \"INIT\" ? 'green' : 'volcano',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, ra_status)\n      };\n    },\n\n    align: 'center'\n  }, _objectSpread({\n    title: \"Date of status change\",\n    dataIndex: \"timestamp\",\n    key: \"timestamp\",\n    sorter: (a, b) => moment(a.timestamp).unix() - moment(b.timestamp).unix(),\n    defaultSortOrder: \"descend\"\n  }, SearchDates(\"timestamp\"), {\n    render: date => moment(date * 1000).format(\"DD/MM/YYYY\"),\n    align: 'center'\n  }), {\n    title: \"Accept RA\",\n    dataIndex: \"mno1\",\n    align: 'center',\n    render: mno1 => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: e => handleSubmit(e, mno1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: list.map((rank, i, arr) => {\n        if (arr.length - 1 === i) {\n          return rank.ra_status.toString();\n        }\n      }) == 'started_ra' ? 'unlock' : 'lock',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    })))\n  }];\n  return React.createElement(\"section\", {\n    className: \"CommentsWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, \"MOBILE NETWORK OPERATORS IN ROAMING AGREEMENTS\"), React.createElement(_Table, {\n    columns: columns,\n    dataSource: list,\n    expandedRowRender: record => {\n      const columns = [{\n        title: 'Article Number',\n        dataIndex: 'articleId',\n        key: 'articleId',\n        align: 'center',\n        render: articleId => React.createElement(_Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, React.createElement(_Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }, articleId))\n      }, {\n        title: 'Article Name',\n        dataIndex: 'articleName',\n        key: 'articleName',\n        align: 'center',\n        render: articleName => React.createElement(_Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, React.createElement(_Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }, articleName))\n      }, {\n        title: 'Article Status',\n        dataIndex: 'articleStatus',\n        key: 'articleStatus',\n        align: 'center',\n\n        render(articleStatus) {\n          return {\n            children: React.createElement(_Tag, {\n              color: articleStatus === \"INIT\" ? 'green' : 'volcano',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 393\n              },\n              __self: this\n            }, articleStatus)\n          };\n        }\n\n      }, {\n        title: 'Article in details',\n        align: 'center',\n\n        render(articles) {\n          return {\n            children: React.createElement(React.Fragment, null, React.createElement(_Button, {\n              type: \"primary\",\n              onClick: () => showModal(selectedRow),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 401\n              },\n              __self: this\n            }, \"View\"))\n          };\n        }\n\n      }];\n      return React.createElement(_Table, {\n        bordered: true,\n        columns: columns,\n        dataSource: record.articles,\n        pagination: false,\n        onRowClick: clicRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }), React.createElement(_Modal, {\n    title: \"Article in detail\",\n    visible: isModalVisible,\n    width: 800,\n    onCancel: handleCancel,\n    footer: [React.createElement(_Button, {\n      key: \"accept\",\n      type: \"primary\",\n      size: \"large\",\n      onClick: handleOk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \"Accept\"), React.createElement(_Button, {\n      key: \"changes\",\n      type: \"normal\",\n      size: \"large\",\n      onClick: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"Changes\"), React.createElement(_Button, {\n      key: \"reject\",\n      type: \"dashed\",\n      size: \"large\",\n      onClick: handleReject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"Reject\")],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, React.createElement(_Form.Item, {\n    label: \"Variables\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, selectedRow && selectedRow.variables.map((data, index) => React.createElement(_Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    span: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    size: \"large\",\n    name: \"key\",\n    style: {\n      width: '100%'\n    },\n    defaultValue: data.key,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    name: \"value\",\n    size: \"large\",\n    placeholder: \"Value\",\n    style: {\n      width: '100%'\n    },\n    defaultValue: data.value,\n    onChange: e => handleVariablesChange(index, e, data.key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452\n    },\n    __self: this\n  })))), React.createElement(_Form.Item, {\n    label: \"Standard Clauses\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456\n    },\n    __self: this\n  }), React.createElement(_Form.Item, {\n    label: \"Variations\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }), React.createElement(_Form.Item, {\n    label: \"Custom Texts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460\n    },\n    __self: this\n  }, selectedRow && selectedRow.customtexts.map(data => React.createElement(_Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    size: \"large\",\n    name: \"value\",\n    style: {\n      width: '100%'\n    },\n    defaultValue: data.value,\n    rows: 6,\n    onChange: e => handleCustomText(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463\n    },\n    __self: this\n  }))))));\n};\n\nexport default RenderList;","map":{"version":3,"sources":["/app/src/pages/List/index.js"],"names":["React","useState","useEffect","ReactCountryFlag","useGlobal","moment","axios","Search","SearchDates","CopyToClipboard","TextArea","config","placement","bottom","duration","RenderList","userDetails","JSON","parse","localStorage","getItem","initialFormState","mno1","country_mno1","mno2","country_mno2","ra_name","ra_status","timestamp","articles","articleId","articleName","articleStatus","variables","variations","stdclauses","customtexts","list","setList","copyState","value","copied","copy","setCopy","setGlobal","onCopy","openNotificationWithIcon","type","title","description","message","clicRow","e","setSelectedRow","selectedRow","isModalVisible","setIsModalVisible","showModal","v","handleCancel","get","process","env","REACT_APP_GATEWAY_HOST","REACT_APP_GATEWAY_PORT","params","ID","headers","then","res","data","ok","json","resJson","catch","error","handleSubmit","preventDefault","jwtToken","post","status","handleOk","formVariables","formCustomText","handleChange","handleReject","key","setFormVariables","handleVariablesChange","i","newFormVariables","target","setFormCustomText","handleCustomText","columns","dataIndex","align","render","color","fontSize","width","height","filters","text","filterMultiple","onFilter","record","toLowerCase","includes","children","sorter","a","b","unix","defaultSortOrder","date","format","map","rank","arr","length","toString","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactCountryFlag from \"react-country-flag\"\nimport { useGlobal } from \"reactn\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { Input, Button, Col, Form, Icon, notification, Modal, Row, Table, Tag, Tooltip } from \"antd\";\nimport Search from \"../../components/table/search\";\nimport SearchDates from \"../../components/table/searchDates\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport TextArea from \"antd/lib/input/TextArea\";\n\nnotification.config({\n  placement: \"topRight\",\n  bottom: 50,\n  duration: 1.5,\n});\n\nconst RenderList = () => {\n\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n\n  const initialFormState = {\n    mno1: \"\",\n    country_mno1: \"\",\n    mno2: \"\",\n    country_mno2: \"\",\n    ra_name: \"\",\n    ra_status: \"\",\n    timestamp: \"\",\n    articles: [{\n      articleId: \"\",\n      articleName: \"\",\n      articleStatus: \"\",\n      variables: [],\n      variations: [],\n      stdclauses: [],\n      customtexts: []\n    }]\n  };\n  const [list, setList] = useState([initialFormState]);\n\n  const copyState = {\n    value: '',\n    copied: false,\n  };\n  const [copy, setCopy] = useState([copyState]);\n  const [, setGlobal] = useGlobal();\n  const onCopy = (value) => {\n    copy.value = value;\n    setCopy({ copied: true })\n    setGlobal({ value: value })\n    setGlobal({ copied: true })\n  }\n\n  const openNotificationWithIcon = (type, title, description) => {\n    notification[type]({\n      message: title,\n      description: description,\n    });\n  };\n\n  const clicRow = (e) => {\n    setSelectedRow(e)\n  }\n\n  const [selectedRow, setSelectedRow] = useState({ variables: [], customtexts: [] });\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const showModal = (v) => {\n    setSelectedRow(v)\n    setIsModalVisible(true);\n  };\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  useEffect(() => {\n    axios\n      .get(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/list`, {\n        params: { ID: userDetails },\n        headers: { 'Content-Type': 'application/json' }\n      })\n      .then(res => {\n        setList(res.data);\n        if (res.ok) {\n          return res.json();\n        }\n        throw res;\n      })\n      .then(resJson => {\n        setList(resJson);\n      })\n      .catch(error => { });\n  }, []); // Execut some element of the array changue\n\n  const handleSubmit = (e, mno1) => {\n    e.preventDefault();\n    const jwtToken = localStorage.getItem(\"token\");\n    //Set POST request\n    axios\n      .post(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/acceptAgreementInitiation`, { mno1, userDetails }, { headers: { \"Authorization\": `Bearer ${jwtToken}` } })\n      .then((res) => {\n        if (res.status === 200) {\n          openNotificationWithIcon(\n            \"success\",\n            \"SUCCESSFULLY REGISTERED AGREEMENT\"\n          );\n        }\n        if (res.status === 201) {\n          openNotificationWithIcon(\n            \"error\",\n            \"MISSING VALUES TO CREATE THE AGREEMENT\"\n          );\n        }\n        if (res.status === 202) {\n          openNotificationWithIcon(\n            \"error\",\n            \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\"\n          );\n        }\n      })\n      .catch(() =>\n        openNotificationWithIcon(\n          \"error\",\n          \"UNREGISTERED ROAMING AGREEMENT\",\n        )\n      )\n  };\n\n  const handleOk = (e) => {\n    e.preventDefault();\n    const jwtToken = localStorage.getItem(\"token\");\n    axios\n      .post(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/acceptProposedChanges`, { list, selectedRow, formVariables, formCustomText, userDetails }, { headers: { \"Authorization\": `Bearer ${jwtToken}` } })\n      .then((res) => {\n        if (res.status === 200) {\n          openNotificationWithIcon(\n            \"success\",\n            \"SUCCESSFULLY REGISTERED AGREEMENT\"\n          );\n        }\n        if (res.status === 201) {\n          openNotificationWithIcon(\n            \"error\",\n            \"MISSING VALUES TO CREATE THE AGREEMENT\"\n          );\n        }\n        if (res.status === 202) {\n          openNotificationWithIcon(\n            \"error\",\n            \"THIS MNO CANNOT ACCEPT THE CHANGES PROPOSED BY ITSELF\"\n          );\n        }\n        if (res.status === 203) {\n          openNotificationWithIcon(\n            \"error\",\n            \"NOT ALLOWED TO MODIFY VARIABLES, VARIATIONS OR CUSTOM TEXTS WHEN CHANGES ARE ACCEPTED\"\n          );\n        }\n      })\n      .catch(() =>\n        openNotificationWithIcon(\n          \"error\",\n          \"UNREGISTERED ROAMING AGREEMENT\",\n        )\n      )\n  };\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    const jwtToken = localStorage.getItem(\"token\");\n    axios\n      .post(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/proposeUpdateArticle`, { list, selectedRow, formVariables, formCustomText, userDetails }, { headers: { \"Authorization\": `Bearer ${jwtToken}` } })\n      .then((res) => {\n        if (res.status === 200) {\n          openNotificationWithIcon(\n            \"success\",\n            \"SUCCESSFULLY REGISTERED AGREEMENT\"\n          );\n        }\n        if (res.status === 201) {\n          openNotificationWithIcon(\n            \"error\",\n            \"MISSING VALUES TO CREATE THE AGREEMENT\"\n          );\n        }\n        if (res.status === 202) {\n          openNotificationWithIcon(\n            \"error\",\n            \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\"\n          );\n        }\n      })\n      .catch(() =>\n        openNotificationWithIcon(\n          \"error\",\n          \"UNREGISTERED ROAMING AGREEMENT\",\n        )\n      )\n  };\n\n  const handleReject = (e) => {\n    e.preventDefault();\n    const jwtToken = localStorage.getItem(\"token\");\n    axios\n      .post(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/`, { selectedRow, formVariables, formCustomText, userDetails }, { headers: { \"Authorization\": `Bearer ${jwtToken}` } })\n      .then((res) => {\n        if (res.status === 200) {\n          openNotificationWithIcon(\n            \"success\",\n            \"SUCCESSFULLY REGISTERED AGREEMENT\"\n          );\n        }\n        if (res.status === 201) {\n          openNotificationWithIcon(\n            \"error\",\n            \"MISSING VALUES TO CREATE THE AGREEMENT\"\n          );\n        }\n        if (res.status === 202) {\n          openNotificationWithIcon(\n            \"error\",\n            \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\"\n          );\n        }\n      })\n      .catch(() =>\n        openNotificationWithIcon(\n          \"error\",\n          \"UNREGISTERED ROAMING AGREEMENT\",\n        )\n      )\n  };\n\n  const [formVariables, setFormVariables] = useState([{ key: \"\", value: \"\" }])\n  const handleVariablesChange = (i, e, v) => {\n    let newFormVariables = [...formVariables];\n    newFormVariables[i] = { key: v, value: e.target.value }\n    setFormVariables(newFormVariables);\n  }\n\n  const [formCustomText, setFormCustomText] = useState([{ value: \"\" }])\n  function handleCustomText(e) {\n    formCustomText[0] = { value: e.target.value }\n    setFormCustomText(formCustomText)\n  }\n\n  const columns = [\n    {\n      title: \"MNO1 Name\", dataIndex: \"mno1\", key: \"mno1\", ...Search(\"mno1\", \"MNO Name\"), align: 'center',\n      render: (mno1) => (\n        <Row>\n          <Col span={20}>\n            {mno1}\n          </Col>\n          <Col span={4}>\n            <CopyToClipboard\n              text={mno1}\n              onCopy={onCopy}\n            >\n              <Tooltip title=\"Copy the name of MNO1\">\n                <Icon type=\"copy\" style={{ color: 'black', fontSize: 'large' }} />\n              </Tooltip>\n            </CopyToClipboard>\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"MNO Country\", dataIndex: \"country_mno1\", key: \"country_mno1\", ...Search(\"country_mno1\", \"por precio del Token\"), align: 'center',\n      render: (country_mno1) => (\n        <Row>\n          <Col span={20}>\n            <ReactCountryFlag countryCode={country_mno1} svg style={{\n              width: '2em',\n              height: '2em',\n            }} />\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"MNO2 Name\", dataIndex: \"mno2\", key: \"mno2\", ...Search(\"mno2\", \"MNO Name\"), align: 'center',\n      render: (mno2) => (\n        <Row>\n          <Col span={20}>\n            {mno2}\n          </Col>\n          <Col span={4}>\n            <CopyToClipboard\n              text={mno2}\n              onCopy={onCopy}\n            >\n              <Tooltip title=\"Copy the name of MNO2\">\n                <Icon type=\"copy\" style={{ color: 'black', fontSize: 'large' }} />\n              </Tooltip>\n            </CopyToClipboard>\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"MNO Country\", dataIndex: \"country_mno2\", key: \"country_mno2\", ...Search(\"country_mno2\", \"por precio del Token\"), align: 'center',\n      render: (country_mno2) => (\n        <Row>\n          <Col span={20}>\n            <ReactCountryFlag countryCode={country_mno2} svg style={{\n              width: '2em',\n              height: '2em',\n            }} />\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"RA name\", dataIndex: \"ra_name\", key: \"ra_name\", ...Search(\"ra_name\", \"por precio del Token\"), align: 'center',\n      render: (ra_name) => (\n        <Row>\n          <Col span={20}>\n            {ra_name}\n          </Col>\n          <Col span={4}>\n            <CopyToClipboard\n              text={ra_name}\n              onCopy={onCopy}\n            >\n              <Tooltip title=\"Copy name of Roaming Agreement\">\n                <Icon type=\"copy\" style={{ color: 'black', fontSize: 'large' }} />\n              </Tooltip>\n            </CopyToClipboard>\n          </Col>\n        </Row>\n      )\n    },\n    {\n      title: \"RA Status\", dataIndex: \"ra_status\", key: \"ra_status\", align: 'center',\n      filters: [\n        { text: \"Comprable\", value: \"comprable\" },\n        { text: \"No vendible\", value: \"no vendible\" },\n      ],\n      filterMultiple: false,\n      onFilter: (value, record) => record.ra_status.toLowerCase().includes(value),\n      render(ra_status, record) {\n        return {\n          children: <Tag color={(ra_status) === \"INIT\" ? 'green' : 'volcano'}>{ra_status}</Tag>\n        };\n      }, align: 'center'\n    },\n    { title: \"Date of status change\", dataIndex: \"timestamp\", key: \"timestamp\", sorter: (a, b) => moment(a.timestamp).unix() - moment(b.timestamp).unix(), defaultSortOrder: \"descend\", ...SearchDates(\"timestamp\"), render: date => moment(date * 1000).format(\"DD/MM/YYYY\"), align: 'center' },\n    {\n      title: \"Accept RA\", dataIndex: \"mno1\", align: 'center', render: (mno1) => (\n        <span>\n          <a\n            onClick={e => handleSubmit(e, mno1)}\n          >\n            <Icon type={list.map((rank, i, arr) => {\n              if (arr.length - 1 === i) {\n                return (rank.ra_status).toString()\n              }\n            }) == 'started_ra' ? 'unlock' : 'lock'} />\n          </a>\n        </span>\n      )\n    },\n  ];\n\n  return (\n    <section className=\"CommentsWrapper\">\n      <h2>MOBILE NETWORK OPERATORS IN ROAMING AGREEMENTS</h2>\n      <Table columns={columns} dataSource={list} expandedRowRender={(record) => {\n        const columns = [\n          {\n            title: 'Article Number', dataIndex: 'articleId', key: 'articleId', align: 'center',\n            render: (articleId) => (\n              <Row>\n                <Col>\n                  {articleId}\n                </Col>\n              </Row>\n            )\n          },\n          {\n            title: 'Article Name', dataIndex: 'articleName', key: 'articleName', align: 'center', render: (articleName) => (\n              <Row>\n                <Col>\n                  {articleName}\n                </Col>\n              </Row>\n            )\n          },\n          {\n            title: 'Article Status', dataIndex: 'articleStatus', key: 'articleStatus', align: 'center', render(articleStatus) {\n              return {\n                children: <Tag color={(articleStatus) === \"INIT\" ? 'green' : 'volcano'}>{articleStatus}</Tag>\n              };\n            }\n          },\n          {\n            title: 'Article in details', align: 'center', render(articles) {\n              return {\n                children: <>\n                  <Button type=\"primary\" onClick={() => showModal(selectedRow)}>\n                    View\n                  </Button>\n                </>\n              };\n            }\n          },\n        ];\n        return (\n          <Table\n            bordered\n            columns={columns}\n            dataSource={record.articles}\n            pagination={false}\n            onRowClick={clicRow}\n          />\n        );\n      }} />\n      {<Modal title=\"Article in detail\" visible={isModalVisible} width={800} onCancel={handleCancel} footer={[\n        <Button key=\"accept\" type=\"primary\" size=\"large\" onClick={handleOk}>\n          Accept\n        </Button>,\n        <Button key=\"changes\" type=\"normal\" size=\"large\" onClick={handleChange}>\n          Changes\n        </Button>,\n        <Button key=\"reject\" type=\"dashed\" size=\"large\" onClick={handleReject}>\n          Reject\n        </Button>,\n      ]}>\n        <Form.Item label=\"Variables\">\n          {selectedRow && selectedRow.variables.map((data, index) =>\n            < Row >\n              <Col span={6}>\n                <Input\n                  size=\"large\"\n                  name=\"key\"\n                  style={{ width: '100%' }}\n                  defaultValue={data.key}\n                  disabled\n                />\n              </Col>\n              <Col span={7}>\n                <Input\n                  name=\"value\"\n                  size=\"large\"\n                  placeholder={\"Value\"}\n                  style={{ width: '100%' }}\n                  defaultValue={data.value}\n                  onChange={e => handleVariablesChange(index, e, data.key)}\n                />\n              </Col>\n              <Col span={11} />\n            </Row>\n          )}\n        </Form.Item>\n        <Form.Item label=\"Standard Clauses\">\n        </Form.Item>\n        <Form.Item label=\"Variations\">\n        </Form.Item>\n        <Form.Item label=\"Custom Texts\" >\n          {selectedRow && selectedRow.customtexts.map(data =>\n            < Row >\n              <TextArea\n                size=\"large\"\n                name=\"value\"\n                style={{ width: '100%' }}\n                defaultValue={data.value}\n                rows={6}\n                onChange={e => handleCustomText(e)}\n              />\n            </Row>\n          )}\n        </Form.Item>\n      </Modal>}\n    </section >\n  );\n};\n\nexport default RenderList;\n"]},"metadata":{},"sourceType":"module"}