{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport _defineProperty from \"/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport _slicedToArray from \"/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/app/src/pages/AddArticle/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  render: text => React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, text)\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Disabled User',\n  age: 99,\n  address: 'Sidney No. 1 Lake Park'\n}]; // rowSelection object indicates the need for row selection\n\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\"selectedRowKeys: \".concat(selectedRowKeys), 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: record => ({\n    disabled: record.name === 'Disabled User',\n    // Column configuration not to be checked\n    name: record.name\n  })\n};\n\nconst AddArticle = () => {\n  const _ref = useState < 'checkbox' | 'radio' > 'checkbox',\n        _ref2 = _slicedToArray(_ref, 2),\n        selectionType = _ref2[0],\n        setSelectionType = _ref2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(_Radio.Group, {\n    onChange: ({\n      target: {\n        value\n      }\n    }) => {\n      setSelectionType(value);\n    },\n    value: selectionType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(_Radio, {\n    value: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Checkbox\"), React.createElement(_Radio, {\n    value: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"radio\")), React.createElement(_Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(_Table, {\n    rowSelection: _objectSpread({\n      type: selectionType\n    }, rowSelection),\n    columns: columns,\n    dataSource: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n};\n\nexport default AddArticle;","map":{"version":3,"sources":["/app/src/pages/AddArticle/index.js"],"names":["React","useState","columns","title","dataIndex","render","text","data","key","name","age","address","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","AddArticle","selectionType","setSelectionType","target","value","type"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,MAAM,EAAGC,IAAD,IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ;AAH5B,CADc,EAMd;AACEH,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CANc,EAUd;AACED,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAVc,CAAhB;AAuBA,MAAMG,IAAgB,GAAG,CACvB;AACEC,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,OAAO,EAAE;AAJX,CADuB,EAOvB;AACEH,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,OAAO,EAAE;AAJX,CAPuB,EAavB;AACEH,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,OAAO,EAAE;AAJX,CAbuB,EAmBvB;AACEH,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,eAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,OAAO,EAAE;AAJX,CAnBuB,CAAzB,C,CA2BA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CAACC,eAAD,EAA+BC,YAA/B,KAA4D;AACpEC,IAAAA,OAAO,CAACC,GAAR,4BAAgCH,eAAhC,GAAmD,gBAAnD,EAAqEC,YAArE;AACD,GAHkB;AAInBG,EAAAA,gBAAgB,EAAGC,MAAD,KAAuB;AACvCC,IAAAA,QAAQ,EAAED,MAAM,CAACV,IAAP,KAAgB,eADa;AACI;AAC3CA,IAAAA,IAAI,EAAEU,MAAM,CAACV;AAF0B,GAAvB;AAJC,CAArB;;AAUA,MAAMY,UAAU,GAAG,MAAM;AAAA,eACmBpB,QAAQ,GAAG,UAAX,GAAwB,UAAW,UADtD;AAAA;AAAA,QAChBqB,aADgB;AAAA,QACDC,gBADC;;AAGvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,2BAAO,KAAP;AACE,IAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,KAAD,KAA2B;AACnCF,MAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACD,KAHH;AAIE,IAAA,KAAK,EAAEH,aAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAO,IAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAOE;AAAO,IAAA,KAAK,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAaE;AACE,IAAA,YAAY;AACVI,MAAAA,IAAI,EAAEJ;AADI,OAEPV,YAFO,CADd;AAKE,IAAA,OAAO,EAAEV,OALX;AAME,IAAA,UAAU,EAAEK,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAwBD,CA3BD;;AA6BA,eAAec,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Table, Radio, Divider } from 'antd';\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    render: (text: string) => <a>{text}</a>,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\n\ninterface DataType {\n  key: React.Key;\n  name: string;\n  age: number;\n  address: string;\n}\n\nconst data: DataType[] = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n  },\n  {\n    key: '4',\n    name: 'Disabled User',\n    age: 99,\n    address: 'Sidney No. 1 Lake Park',\n  },\n];\n\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n  onChange: (selectedRowKeys: React.Key[], selectedRows: DataType[]) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: (record: DataType) => ({\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\n    name: record.name,\n  }),\n};\n\nconst AddArticle = () => {\n  const [selectionType, setSelectionType] = useState < 'checkbox' | 'radio' > ('checkbox');\n\n  return (\n    <div>\n      <Radio.Group\n        onChange={({ target: { value } }) => {\n          setSelectionType(value);\n        }}\n        value={selectionType}\n      >\n        <Radio value=\"checkbox\">Checkbox</Radio>\n        <Radio value=\"radio\">radio</Radio>\n      </Radio.Group>\n\n      <Divider />\n\n      <Table\n        rowSelection={{\n          type: selectionType,\n          ...rowSelection,\n        }}\n        columns={columns}\n        dataSource={data}\n      />\n    </div>\n  );\n};\n\nexport default AddArticle;"]},"metadata":{},"sourceType":"module"}