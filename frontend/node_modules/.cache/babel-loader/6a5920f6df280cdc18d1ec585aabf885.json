{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/auto-complete/style\";\nimport _AutoComplete from \"antd/es/auto-complete\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _defineProperty from \"/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _slicedToArray from \"/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/app/src/pages/AddArticle/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./../../App.css\";\nimport axios from \"axios\";\nimport outputNLP from \"./../../data/outputNLP.json\";\n\nconst AddArticle = () => {\n  const initialFormState = {\n    raname: \"\",\n    articleNo: \"\",\n    articleName: \"\",\n    customText: \"\"\n  };\n  const formItemLayout = {};\n  const TextArea = _Input.TextArea;\n  const Option = _Select.Option;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState({\n    value: true\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        input = _useState4[0],\n        setInput = _useState4[1];\n\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n\n  const _useState5 = useState(initialFormState),\n        _useState6 = _slicedToArray(_useState5, 2),\n        addArticle = _useState6[0],\n        setAddArticle = _useState6[1];\n\n  const _useState7 = useState({\n    articles: []\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        selectedRA = _useState8[0],\n        setSelectedRA = _useState8[1];\n\n  const _useState9 = useState({\n    variables: []\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedArticle = _useState10[0],\n        setSelectedArticle = _useState10[1];\n\n  const openNotificationWithIcon = (type, title, description) => {\n    _notification[type]({\n      message: title,\n      description: description\n    });\n  };\n\n  function handleChange(e) {\n    addArticle.raname = e;\n    setAddArticle(prevValue => _objectSpread({}, prevValue, {\n      raname: e\n    }));\n    let new_e = outputNLP.find(item => {\n      return item.hint === e;\n    });\n    setSelectedRA(new_e);\n  }\n\n  function handleChange2(event) {\n    const value = event.target.value;\n    setAddArticle(_objectSpread({}, addArticle, {\n      [event.target.name]: value\n    }));\n  }\n\n  const onChange2 = value => {\n    setAddArticle(_objectSpread({}, addArticle, {\n      articleName: value\n    }));\n    addArticle.articleName = value;\n    outputNLP.map(item => {\n      item.articles.map(data => {\n        if (data.article == value) {\n          setAddArticle(_objectSpread({}, addArticle, {\n            articleNo: data.id\n          }));\n          addArticle.articleNo = data.id;\n          setSelectedArticle(data);\n        }\n      });\n    });\n  };\n\n  const handleInput = e => {\n    input.value = !e;\n    setInput(prevValue => _objectSpread({}, prevValue, {\n      value: !e\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    const jwtToken = localStorage.getItem(\"token\");\n    axios.post(\"http://\".concat(process.env.REACT_APP_GATEWAY_HOST, \":\").concat(process.env.REACT_APP_GATEWAY_PORT, \"/proposeAddArticle\"), {\n      addArticle,\n      userDetails\n    }, {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(jwtToken)\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        openNotificationWithIcon(\"success\", \"SUCCESSFULLY REGISTERED AGREEMENT\");\n      }\n\n      if (res.status === 201) {\n        openNotificationWithIcon(\"error\", \"MISSING VALUES TO CREATE THE AGREEMENT\");\n      }\n\n      if (res.status === 202) {\n        openNotificationWithIcon(\"error\", \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\");\n      }\n    }).catch(() => openNotificationWithIcon(\"error\", \"UNREGISTERED ROAMING AGREEMENT\")).finally(() => setLoading(false));\n  };\n\n  return React.createElement(\"section\", {\n    className: \"CommentsWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \" PROPOSE ARTICLES FOR ROAMING AGREEMENT\"), React.createElement(_Row, {\n    gutter: [16, 16],\n    type: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    xl: 24,\n    lg: 24,\n    md: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n    name: \"basic\",\n    initialvalues: {\n      remember: true\n    },\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(_Spin, {\n    spinning: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    lg: 1,\n    md: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(_Col, {\n    lg: 23,\n    md: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(_Form.Item, {\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(_Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(_Form.Item, {\n    label: \"NAME OF THE ROAMING AGREEMENT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(_Select, {\n    size: \"large\",\n    name: \"raname\",\n    onChange: e => handleChange(e),\n    style: {\n      width: '35%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, outputNLP.map(item => React.createElement(Option, {\n    key: item.uid,\n    value: item.hint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, item.hint)))), React.createElement(_Form.Item, {\n    label: \"SELECT ARTICLE NAME AND ID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    span: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, outputNLP.map(item => React.createElement(_AutoComplete, {\n    size: \"large\",\n    placeholder: \"Name of the Article\",\n    dataSource: item.articles.map(data => data.article),\n    style: {\n      width: '93%'\n    },\n    onChange: onChange2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))), React.createElement(_Col, {\n    span: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    size: \"large\",\n    style: {\n      width: '100%'\n    },\n    placeholder: \"ID\",\n    value: addArticle.articleNo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 13,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(_Form.Item, {\n    label: \"SELECT VARIABLES\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, selectedArticle.variables.map(item => React.createElement(_Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    span: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    size: \"large\",\n    style: {\n      width: '85%'\n    },\n    placeholder: \"ID\",\n    defaultValue: item.verify,\n    type: \"text\",\n    name: \"raname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    name: \"value\",\n    size: \"large\",\n    placeholder: \"Value\",\n    style: {\n      width: '88%'\n    },\n    type: \"text\" //value={element.value || \"\"}\n    //onChange={e => handleVariablesChange(index, e)}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })))), React.createElement(_Form.Item, {\n    label: \"ENABLE CUSTOM TEXTS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    span: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(_Switch, {\n    size: \"large\",\n    onChange: e => handleInput(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(TextArea, {\n    placeholder: \"Name of the Roaming Agreement\",\n    name: \"customText\",\n    size: \"large\",\n    rows: 4,\n    style: {\n      width: '99%'\n    },\n    disabled: input.value,\n    type: \"text\",\n    onChange: handleChange2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })), React.createElement(_Col, {\n    span: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })), React.createElement(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }), React.createElement(_Button, {\n    size: \"large\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    style: {\n      width: '40.5%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"PROPOSE ARTICLE\"))))))))));\n};\n\nexport default AddArticle;","map":{"version":3,"sources":["/app/src/pages/AddArticle/index.js"],"names":["React","useState","useEffect","axios","outputNLP","AddArticle","initialFormState","raname","articleNo","articleName","customText","formItemLayout","TextArea","Option","loading","setLoading","value","input","setInput","userDetails","JSON","parse","localStorage","getItem","addArticle","setAddArticle","articles","selectedRA","setSelectedRA","variables","selectedArticle","setSelectedArticle","openNotificationWithIcon","type","title","description","message","handleChange","e","prevValue","new_e","find","item","hint","handleChange2","event","target","name","onChange2","map","data","article","id","handleInput","handleSubmit","preventDefault","jwtToken","post","process","env","REACT_APP_GATEWAY_HOST","REACT_APP_GATEWAY_PORT","headers","then","res","status","catch","finally","remember","width","uid","verify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  AutoComplete,\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Spin,\n  notification,\n  Switch,\n  Select\n} from \"antd\";\nimport \"./../../App.css\";\nimport axios from \"axios\";\nimport outputNLP from \"./../../data/outputNLP.json\";\n\nconst AddArticle = () => {\n\n  const initialFormState = {\n    raname: \"\",\n    articleNo: \"\",\n    articleName: \"\",\n    customText: \"\",\n  };\n\n  const formItemLayout = {};\n  const { TextArea } = Input;\n  const { Option } = Select;\n  const [loading, setLoading] = useState(false);\n  const [input, setInput] = useState({ value: true });\n  let userDetails = JSON.parse(localStorage.getItem('user'));\n  const [addArticle, setAddArticle] = useState(initialFormState);\n  const [selectedRA, setSelectedRA] = useState({ articles: [] })\n  const [selectedArticle, setSelectedArticle] = useState({ variables: [] })\n\n  const openNotificationWithIcon = (type, title, description) => {\n    notification[type]({\n      message: title,\n      description: description,\n    });\n  };\n\n  function handleChange(e) {\n    addArticle.raname = e;\n    setAddArticle(prevValue => ({ ...prevValue, raname: e }));\n    let new_e = outputNLP.find(item => {\n      return item.hint === e;\n    })\n    setSelectedRA(new_e)\n  }\n\n  function handleChange2(event) {\n    const value = event.target.value;\n    setAddArticle({\n      ...addArticle,\n      [event.target.name]: value\n    });\n  }\n\n  const onChange2 = (value) => {\n    setAddArticle({ ...addArticle, articleName: value })\n    addArticle.articleName = value;\n    outputNLP.map(item => {\n      item.articles.map(data => {\n        if (data.article == value) {\n          setAddArticle({ ...addArticle, articleNo: data.id })\n          addArticle.articleNo = data.id;\n          setSelectedArticle(data)\n        }\n      })\n    })\n  };\n\n  const handleInput = (e) => {\n    input.value = !e;\n    setInput(prevValue => ({ ...prevValue, value: !e }));\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true)\n    const jwtToken = localStorage.getItem(\"token\");\n    axios\n      .post(`http://${process.env.REACT_APP_GATEWAY_HOST}:${process.env.REACT_APP_GATEWAY_PORT}/proposeAddArticle`, { addArticle, userDetails }, { headers: { \"Authorization\": `Bearer ${jwtToken}` } })\n      .then((res) => {\n        if (res.status === 200) {\n          openNotificationWithIcon(\n            \"success\",\n            \"SUCCESSFULLY REGISTERED AGREEMENT\"\n          );\n        }\n        if (res.status === 201) {\n          openNotificationWithIcon(\n            \"error\",\n            \"MISSING VALUES TO CREATE THE AGREEMENT\"\n          );\n        }\n        if (res.status === 202) {\n          openNotificationWithIcon(\n            \"error\",\n            \"ROAMING AGREEMENT MUST BE CREATED BETWEEN TWO MNOs\"\n          );\n        }\n      })\n      .catch(() =>\n        openNotificationWithIcon(\n          \"error\",\n          \"UNREGISTERED ROAMING AGREEMENT\",\n        )\n      )\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <section className=\"CommentsWrapper\">\n      <h2> PROPOSE ARTICLES FOR ROAMING AGREEMENT</h2>\n      <Row gutter={[16, 16]} type=\"flex\">\n        <Col xl={24} lg={24} md={24}>\n          <Form\n            {...formItemLayout}\n            name=\"basic\"\n            initialvalues={{\n              remember: true\n            }}\n            onSubmit={handleSubmit}\n          >\n            <Spin spinning={loading}>\n              <Col lg={1} md={24}></Col>\n              <Col lg={23} md={24}>\n                <Form.Item hasFeedback>\n                  <Row>\n                    <Form.Item label=\"NAME OF THE ROAMING AGREEMENT\">\n                      <Select\n                        size=\"large\"\n                        name=\"raname\"\n                        onChange={e => handleChange(e)}\n                        style={{ width: '35%' }}\n                      >\n                        {outputNLP.map((item) => (\n                          <Option\n                            key={item.uid}\n                            value={item.hint}\n                          >\n                            {item.hint}\n                          </Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n\n                    <Form.Item label=\"SELECT ARTICLE NAME AND ID\">\n                      <Col span={9}>\n                        {outputNLP.map((item) => (\n                          <AutoComplete\n                            size=\"large\"\n                            placeholder={\"Name of the Article\"}\n                            dataSource={item.articles.map(data => data.article)}\n                            style={{ width: '93%' }}\n                            onChange={onChange2}\n                          />\n                        ))}\n                      </Col>\n                      <Col span={2} >\n                        <Input\n                          size=\"large\"\n                          style={{ width: '100%' }}\n                          placeholder={\"ID\"}\n                          value={addArticle.articleNo}\n                        />\n                      </Col>\n                      <Col span={13} ></Col>\n                    </Form.Item>\n\n                    <Form.Item label=\"SELECT VARIABLES\">\n                      {selectedArticle.variables.map((item) => (\n                        <Row >\n                          <Col span={4}>\n                            <Input\n                              size=\"large\"\n                              style={{ width: '85%' }}\n                              placeholder={\"ID\"}\n                              defaultValue={item.verify}\n                              type=\"text\"\n                              name=\"raname\"\n                            />\n                          </Col>\n                          <Col span={5}>\n                            <Input\n                              name=\"value\"\n                              size=\"large\"\n                              placeholder={\"Value\"}\n                              style={{ width: '88%' }}\n                              type=\"text\"\n                            //value={element.value || \"\"}\n                            //onChange={e => handleVariablesChange(index, e)}\n                            />\n                          </Col>\n                          <Col span={15}></Col>\n                        </Row>\n                      ))}\n                    </Form.Item>\n\n                    <Form.Item label=\"ENABLE CUSTOM TEXTS\">\n                      <Col span={20}>\n                        <Switch\n                          size=\"large\"\n                          onChange={e => handleInput(e)}\n                        />\n                        <TextArea\n                          placeholder={\"Name of the Roaming Agreement\"}\n                          name=\"customText\"\n                          size=\"large\"\n                          rows={4}\n                          style={{ width: '99%' }}\n                          disabled={input.value}\n                          type=\"text\"\n                          onChange={handleChange2}\n                        />\n                      </Col>\n                      <Col span={4}></Col>\n                    </Form.Item>\n\n                    <Form.Item>\n                      <br />\n                      <Button\n                        size=\"large\"\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        block\n                        style={{ width: '40.5%' }}\n                      >\n                        PROPOSE ARTICLE\n                      </Button>\n                    </Form.Item>\n                  </Row>\n                </Form.Item>\n              </Col>\n            </Spin>\n          </Form>\n        </Col>\n      </Row>\n    </section >\n  );\n};\n\nexport default AddArticle;"]},"metadata":{},"sourceType":"module"}