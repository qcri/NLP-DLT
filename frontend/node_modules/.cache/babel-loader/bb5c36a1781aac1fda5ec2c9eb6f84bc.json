{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar methods_1 = require(\"../methods\");\n\nvar component_will_unmount_1 = require(\"./component-will-unmount\");\n\nvar component_will_update_1 = require(\"./component-will-update\");\n\nvar should_component_update_1 = require(\"./should-component-update\");\n\nfunction bindLifecycleMethods(that) {\n  if (!component_will_unmount_1.componentWillUnmountPrototype(that)) {\n    that.componentWillUnmount = function () {\n      methods_1.ReactNComponentWillUnmount(that);\n    };\n  }\n\n  var _a = __read(React.version.split('.').map(function (v) {\n    return parseInt(v);\n  }), 2),\n      rVerMaj = _a[0],\n      rVerMin = _a[1];\n\n  var isPureComponent = React.PureComponent && that instanceof React.PureComponent;\n  var isUsingOldReact = rVerMaj < 16 || rVerMaj === 16 && rVerMin < 3;\n\n  if (isUsingOldReact && !component_will_update_1.componentWillUpdatePrototype(that)) {\n    that.componentWillUpdate = function () {\n      methods_1.ReactNComponentWillUpdate(that);\n    };\n  }\n\n  if (!isUsingOldReact && isPureComponent && !component_will_update_1.componentWillUpdatePrototype(that)) {\n    that.UNSAFE_componentWillUpdate = function () {\n      methods_1.ReactNComponentWillUpdate(that);\n    };\n  }\n\n  if (!isUsingOldReact && !isPureComponent && !should_component_update_1.shouldComponentUpdatePrototype(that)) {\n    that.shouldComponentUpdate = function () {\n      methods_1.ReactNShouldComponentUpdate(that);\n      return true;\n    };\n  }\n}\n\nexports.default = bindLifecycleMethods;\n;","map":null,"metadata":{},"sourceType":"script"}