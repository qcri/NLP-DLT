{"ast":null,"code":"import \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _slicedToArray from \"/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nvar _jsxFileName = \"/app/src/components/table/searchDates.js\";\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nconst RangePicker = _DatePicker.RangePicker;\nconst defaultDatesSearch = [moment().set({\n  year: 2019,\n  month: 9,\n  date: 1,\n  hour: 0,\n  minute: 0,\n  second: 0\n}), moment().set({\n  hour: 23,\n  minute: 59,\n  second: 59\n})];\n\nconst getRanges = () => {\n  return {\n    \"Este mes\": [moment().startOf(\"month\"), moment().endOf(\"month\")],\n    \"Esta semana\": [moment().startOf(\"week\"), moment().endOf(\"week\")],\n    Ayer: [moment().set({\n      hour: 0,\n      minute: 0,\n      second: 0\n    }).add(-1, \"day\"), moment().set({\n      hour: 23,\n      minute: 59,\n      second: 59\n    }).add(-1, \"day\")],\n    \"Últimas 24 horas\": [moment().subtract(24, \"h\"), moment()],\n    \"Últimas 12 horas\": [moment().subtract(12, \"h\"), moment()],\n    \"Últimas 6 horas\": [moment().subtract(6, \"h\"), moment()],\n    \"Últimas 3 horas\": [moment().subtract(3, \"h\"), moment()],\n    \"Última hora\": [moment().subtract(1, \"h\"), moment()],\n    \"Últimos 30 minutos\": [moment().subtract(30, \"minutes\"), moment()],\n    \"Últimos 15 minutos\": [moment().subtract(15, \"minutes\"), moment()],\n    \"Últimos 5 minutos\": [moment().subtract(5, \"minutes\"), moment()]\n  };\n};\n\nconst TableSearchDates = dataIndex => {\n  const _useState = useState(defaultDatesSearch),\n        _useState2 = _slicedToArray(_useState, 2),\n        dates = _useState2[0],\n        setDates = _useState2[1];\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => React.createElement(\"div\", {\n      style: {\n        padding: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(RangePicker, {\n      ranges: getRanges(),\n      showTime: true,\n      format: \"DD/MM/YYYY\",\n      defaultValue: dates,\n      onChange: values => setSelectedKeys(values),\n      onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n      style: {\n        width: 215,\n        marginBottom: 8,\n        display: \"block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"primary\",\n      onClick: () => handleSearch(selectedKeys, confirm, dataIndex),\n      icon: \"search\",\n      size: \"small\",\n      style: {\n        width: 90,\n        marginRight: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Buscar\"), React.createElement(_Button, {\n      onClick: () => handleReset(clearFilters),\n      size: \"small\",\n      style: {\n        width: 90\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Reset\")),\n    filterIcon: filtered => React.createElement(_Icon, {\n      type: \"search\",\n      style: {\n        color: filtered ? \"#1890ff\" : undefined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }),\n    onFilter: (_, record) => {\n      let d = record[dataIndex] * 1000;\n      return moment(d).isBetween(dates[0], dates[1]);\n    },\n    render: text => text\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setDates(selectedKeys);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setDates(defaultDatesSearch);\n  };\n\n  return getColumnSearchProps(dataIndex);\n};\n\nexport default TableSearchDates;","map":{"version":3,"sources":["/app/src/components/table/searchDates.js"],"names":["React","useState","moment","RangePicker","defaultDatesSearch","set","year","month","date","hour","minute","second","getRanges","startOf","endOf","Ayer","add","subtract","TableSearchDates","dataIndex","dates","setDates","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","values","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","_","record","d","isBetween","render","text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Button, Icon, DatePicker } from \"antd\";\nimport moment from \"moment\";\n\nconst { RangePicker } = DatePicker;\nconst defaultDatesSearch = [\n  moment().set({ year: 2019, month: 9, date: 1, hour: 0, minute: 0, second: 0 }),\n  moment().set({ hour: 23, minute: 59, second: 59 })\n];\n\nconst getRanges = () => {\n  return {\n    \"Este mes\": [moment().startOf(\"month\"), moment().endOf(\"month\")],\n    \"Esta semana\": [moment().startOf(\"week\"), moment().endOf(\"week\")],\n    Ayer: [\n      moment()\n        .set({ hour: 0, minute: 0, second: 0 })\n        .add(-1, \"day\"),\n      moment()\n        .set({ hour: 23, minute: 59, second: 59 })\n        .add(-1, \"day\")\n    ],\n    \"Últimas 24 horas\": [moment().subtract(24, \"h\"), moment()],\n    \"Últimas 12 horas\": [moment().subtract(12, \"h\"), moment()],\n    \"Últimas 6 horas\": [moment().subtract(6, \"h\"), moment()],\n    \"Últimas 3 horas\": [moment().subtract(3, \"h\"), moment()],\n    \"Última hora\": [moment().subtract(1, \"h\"), moment()],\n    \"Últimos 30 minutos\": [moment().subtract(30, \"minutes\"), moment()],\n    \"Últimos 15 minutos\": [moment().subtract(15, \"minutes\"), moment()],\n    \"Últimos 5 minutos\": [moment().subtract(5, \"minutes\"), moment()]\n  };\n};\n\nconst TableSearchDates = dataIndex => {\n  const [dates, setDates] = useState(defaultDatesSearch);\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <RangePicker\n          ranges={getRanges()}\n          showTime\n          format=\"DD/MM/YYYY\"\n          defaultValue={dates}\n          onChange={values => setSelectedKeys(values)}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 215, marginBottom: 8, display: \"block\"}}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Buscar\n        </Button>\n        <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => <Icon type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />,\n    onFilter: (_, record) =>{ let d = record[dataIndex]*1000; return moment(d).isBetween(dates[0], dates[1])},\n    render: text => text\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setDates(selectedKeys);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setDates(defaultDatesSearch);\n  };\n\n  return getColumnSearchProps(dataIndex);\n};\n\nexport default TableSearchDates;\n"]},"metadata":{},"sourceType":"module"}